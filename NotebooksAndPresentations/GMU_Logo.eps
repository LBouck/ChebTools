%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 10.0%%For: (Heath Dwiggins) (Grafik)%%Title: (GMU_PrimaryLogo_U 2C.eps)%%CreationDate: 01/06/04 14.50%%BoundingBox: 71 -363 216 -268%%HiResBoundingBox: 71.6289 -362.4771 215.6904 -268.835%%DocumentProcessColors:%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%DocumentCustomColors: (PANTONE 116)%%+ (PANTONE 349)%%CMYKCustomColor: 0 0.16 1 0 (PANTONE 116)%%+ 1 0 0.91 0.42 (PANTONE 349)%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 131071 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 144.1729 -396.5 144.1729 -396.5%AI3_TileBox: -148.3276 -778 435.6729 -15%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 0%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -504.3271 100 1 1268 972 26 1 1 6 42 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-148.3276 -778%%AI3_PaperRect:-14 777 598 -15%%AI3_Margin:14 -14 -14 15%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 84 8%%BeginData: 11516 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3FFFCFCEFD7DFFC9C6C9FD7CFFC7FEC7FD7BFFCEC6C6C6CFFD79%FFCECCC6FEC6CEFD77FFCFCEFD06C6CFFD76FFC8CCC6FEC6C6C6FECDFD74%FFC9C7FD09C6FD73FFCEC7FEC6FEC6FEC6FEC6FEC6CEFD71FFC9C7FD0BC6%C7FD70FFCFC6FEC6C6C6FEC6C6C6FEC6C6C7CEFD6FFFCACCFD0BC6CECFFD%70FFC8FEC6FEC6FEC6FEC6FEC7CECFFD72FFC7FD08C6CDCFFD73FFCFC6FE%C6C6C6FEC6CCC9FD75FFCEFD06C6C7CFFD08FF583334FD6BFFCEC6FEC6FE%C6CCCEFD06FFCF58340B0B0BFD6BFFCFFD05C6CEFD05FFAE582D040B040B%0483FD6BFFC6C6C6FEC7FD05FF8334050B050B050B052DFD6BFFFD04C6C8%FFFFFFA8590B0B040B040B040B040B7CFD6AFFC8FEC6CCCFFFFFFF582D0B%0B050B0B0B050B0B0B2DFD6AFFCFC6C6CDCFFFFF58050B040B040B040B04%0B040B0483FD6AFFCDC6CDFFFF832D050B050B050B050B050B0B5858AEFD%6AFFCFC6CEFFFF2D0B040B040B040B042D3383A8FD6EFFC7CEFFAEFD040B%050B0B2D58FD72FFCFCEFFA8050B040B040B2DAEFD76FF83050B050B0558%A8FD77FFA8050B040B2DAEFD07FFA883585858FD6DFF0B0B0534A8FD05FF%A8832D0B052D58CFFD6DFF0B0B0558FD04FFA8580B0B040B0558A8FD6EFF%580B0BAEFFFFFFA82D0B050B050B34FD70FF830B2DFFFFFF832D040B040B%042D83FD08FF83FD052D59FD05FF8334585858345858AEFD06FF58330B2D%3383FD06FF8358345858583483FD08FFA858FD042D34A8FD04FFA8583458%5858345883FF5F5858585F5858585F585858FD0FFFAE2D83FFFFFF2D0B05%0B0B0B055FFD08FF832D050B0B0B050B0BFD05FF580B0B0B050B0B0B83FD%04FFAE0B0B050B0B0B0558FD05FF58050B0B0B050B0B58FD06FF2D0B050B%0B0B050B58FD04FFA8050B0B0B050B0B58FF580B040B040B040B040B040B%33FD0EFF5883FFFF58040B040B040B0BA8FD08FF830B040B042D2D2D040B%FD05FF58040B0B2D0B332DA8FD04FF0B0B040B0B2D040B0458FD04FF580B%042D2D0B040B04A8FD04FF0B0B040B04332D0B0483FD04FF830B040B2D2D%0B3358FFFF580B050B050B050B050B050BA8FD0FFFAE34050B050B050B2D%FD0AFF34050B0BA8FD04FF83FD05FF580B0558FD08FF7D0B050BA8FFFF58%050B05FD04FF58050B58FFAE2D050B83FFFFFF830B050B34FD04FFAEAEFD%04FFA8050B2DFD08FF580B040B040B040B040B0433FD0EFF830B040B040B%040B04FD0BFF040B0483FD0BFF58040B2DFD0483FD04FF58040B2DFFFFFF%A80B040B83FFFFFF340B0458A883040B04AEFFFFFF58040B05FD0BFF830B%042DFD0483A8FD04FF580B050B0B0B050B0B0B05A8FD0CFF830B050B0B0B%050B0B0BFD0AFF830B050BFFFF830B0B0B05A8FD04FF580B050B0B0B050B%FD04FF2D0B055FFD04FF0B0B05A8FFFFFF5F0B0B05FD040B83FD04FF2D0B%055FFFFF2D0B0B0B2DFD04FFA80B0B050B0B0B05A8FD04FFA8040B040B04%0B040B040B0BFD0BFF330B040B040B040B040B04FD0AFFA8040B04FFFF83%040B040B83FD04FF58040B040B040B04FD04FF33040B58FD04FF0B040B83%FFFFFF580B040B040B040BA8FD04FF33040B33FFFF2D040B042DFD04FF83%0B040B040B040B83FD04FF830B050B050B050B050B050B83FD09FF830B05%0B050B050B050B050BFD0BFF0B050B58FFAEA80B0B05A8FD04FF580B0558%FD08FF340B052DFFFFFFAE050B05AEFFFFFF58050B3483050B0583FD04FF%580B052DFFFFA883050B2DFD04FFA8050B2DFD09FF83040B040B040B040B%040B040BFD09FF2D040B040B040B040B040B04FD0BFF2D0B040B58FFFF2D%040B83FD04FF58040B58FD08FF83040B0483FFFF2D0B042DFD04FF580B04%58FF83040B0BFD04FFA8040B0433A8FF830B042DFD04FF830B042DFD09FF%830B0B0B050B0B0B050B0B0B0583FD07FFA80B0B050B0B0B050B0B0B050B%FD0CFF0B0B050B0B2D050B0BA8FD04FF580B0B0B050B0B0B58FD04FF340B%0B05340B0B050B83FD04FF58050B58FFAE0B0B0BA8FD04FF580B0B050B2D%2D050B2DFD04FFA8050B0B0B050B0B58FD04FF83040B040B040B040B040B%040B04FD07FF0B0B040B040B040B040B040B04FD0CFFAE2D0B040B040B04%0B83FD04FF58040B040B040B0458FD04FFA833040B040B040B58FD05FF58%0B0458FFFF2D0B0458FD05FF58050B040B040B0433FD04FF830B040B040B%040B58FD04FF830B050B050B050B050B050B050B58FD05FFA80B050B050B%050B050B050B050BFD0EFFA883FD045883FD05FF83FD075883FD06FFAE58%585883A8FD06FFA8585883FFFFA858587DFD07FF83FD04588383FD04FFCF%FD0758A8FD04FF83040B040B040B040B040B040B040BA8FD04FF58040B04%0B2D0B040B040B040B04FD5EFF830B050B0B0B592D0B0B050B0B0B0558FD%04FF0B0B050B34A8050B0B0B050B0B0BFD5EFFA8040B040B0483580B040B%040B040B04AEFFFF580B040B0BFF830B040B040B040B04FD0BFFA88383A8%83FD0FFF838358838383FD0EFF7D580B2D040B0B587DFD06FFAE838383A8%838383AEFD06FF83A8838383A8838383A8FFFFFF830B050B050B83FF050B%050B050B050B2DFFFF2D050B0BAEFFA8050B050B050B050BFD0BFF83050B%050BA8FD0BFFA858050B050B050B050B05343458A8FD06FF830B0B050B05%0B050B050B0B83FD04FF832D050B050B050B05AEFD05FF58050B050B050B%050B2DFFFFFF83040B040B0483FF83040B040B040B040B8383040B0459FF%FF830B040B040B040B04FD0BFF050B040B0458FD0AFF580B040B040B040B%040B040B040B0BFD05FFA82D040B040B040B040B040B040B0433A8FFFFFF%830B040B040B040B0BFD06FF34040B040B040B2DFD04FF830B0B0B050B83%FFFF2D0B0B050B0B0B05342D0B0534FFFFFFA80B0B050B0B0B050BFD0AFF%830B0B0B050B0BFD09FF830B0B0B050B0B2D2D0B0B0B050B0BA8FD04FFAE%340B0B050B0B2D335F2D0B050B0B0B0534CFFFFFFFA82D050B0B0B050B2D%FD06FF580B0B050B34FD05FF83040B040B04A8FFFF830B040B040B040B04%0B040BA8FFFFFF830B040B040B040B04FD0AFF34040B040B040B58FD08FF%0B040B040B0BAEFFFFA82D040B0458FD05FF2D040B040B042DA8FFFFFF83%0B040B040B0433FD04FF580B040B040B040B58FD06FF0B040B04FD06FF83%0B050B050B83FFFFFF2D0B050B050B050B050B58FD04FFA8050B050B050B%050BFD0AFF050B050B050B052DFD07FF83050B050B0583FD04FFAE2D052D%AEFD04FF58050B050B050BA8FD05FF830B050B050B0583FFFFFF58050B05%0B050B050B83FD05FF050B050BFD06FF83040B040B0483FFFFFFA8040B04%0B040B040B04FD05FF830B040B040B040B04FD09FF580B040B040B040B04%AEFD06FF340B040B040B2DFD05FFA82D7DFD04FFAE040B040B040B2DFD07%FF2D0B040B040B04FFFFFF340B040B040B040B040B83FD04FF0B040B04FD%06FF830B050B0B0B83FD04FF580B0B050B0B0B0583FD05FFA8050B0B0B05%0B0B0BFD09FF2D0B0B050B0B0B050B58FD06FF5F0B0B050B0B0B33FD0BFF%340B0B0B050B0B83FD07FF83050B0B0B050B58FFFF5F0B0B050B0B0B050B%0B2DAEFFFFFF050B0B0BFD06FFA8040B040B0483FD04FFA80B040B040B04%0BFD06FF830B040B040B040B04FD08FF83040B040B040B040B040BFD06FF%7D0B040B040B040B0BA8FD09FF0B040B040B040BA8FD07FF830B040B040B%042DFFFF580B040B040B040B040B0434FFFFFF0B040B04FD06FF830B050B%050B83FD05FF580B050B050B7DFD06FFA8050B050B050B050BFD08FF340B%050B2D0B050B050B0583FD06FF050B050B050B050B053483FD06FFAE050B%050B050B05FD09FF050B050B050B05FFFF58050B0558050B050B050B0583%FFFF050B050BFD06FF83040B040B0483FD06FF050B040B05FD07FF830B04%0B040B040B04FD07FFA80B040B04830B0B040B040B0BFD06FF58040B040B%040B040B040B2DAEFD04FF7C0B040B040B042DFD09FF0B040B040B040B83%FF580B040B58A8040B040B040B0483FF0B040B04FD06FF830B0B0B050B83%FD06FF830B0B055FFD07FFA80B0B050B0B0B050BFD07FF5F0B0B052DFF83%050B0B0B050BA8FD06FF580B0B050B0B0B050B0B0B0558CFFFFF5F0B0B05%0B0B0B2DFD09FF2D0B050B0B0B05A8FF58050B0B58FF830B0B05FD040BFF%0B0B050BFD06FF83040B040B04A8FD07FF2D040BA8FD07FF830B040B040B%040B04FD07FF0B0B040B58FFA80B040B040B0458FD07FF83050B040B040B%040B040B042DA8FF580B040B040B042DFD09FF33040B040B040B83FF580B%040B58FFFF58040B040B040B0B0B040B04FD06FF830B050B050B83FD07FF%340B34FD08FFA8050B050B050B050BFD06FF830B050B05FFFFFF340B050B%050B05FD08FFCF340B050B050B050B050B052DFF83050B050B050B2DFD09%FF0B0B050B050B05A8FF58050B0558FFFFFF34050B050B050B050B050BFD%06FF83040B040B0483FD07FF0B0483FD08FF830B040B040B040B04FD06FF%34040B040B2D2D0B2D040B040B040B58FD09FFA82D040B040B040B040B04%83830B040B040B042DFD09FF0B040B040B040B83FF340B040B34FFFFFFA8%2D040B040B040B040B04FD06FF830B050B0B0B83FD06FF83052DFD09FFA8%050B0B0B050B0B0BFD06FF0B0B050B0B0B050B0B0B050B0B0B0534FD0BFF%A82D0B050B0B0B050B34FF050B0B0B050B0BFD09FF050B0B0B050B0BFFFF%5F0B0B055FFD04FFA82D050B0B0B050B0B0BFD06FFA8040B040B0483FD06%FF2D0B33FD09FF830B040B040B040B04FD05FF580B040B040B040B040B04%0B040B040B04AEFD0CFF7D0B040B040B0433FF34040B040B040B83FD07FF%7D0B040B040B0458FFFF580B040B58FD05FF830B040B040B040B04FD06FF%830B050B050B83FD06FF2D0583FD09FFA8050B050B050B050BFD05FF2D05%0B052D2D342D342D34050B050B050B58FD04FFA858FD07FF7D0B050B050B%2DFF7D0B050B050B0583FD07FF58050B050B050B83FFFF58050B0558FD06%FF580B050B050B050BFD06FF83040B040B0483FD05FFA8040BFD0AFF830B%040B040B040B04FD04FF83040B040BA8FD06FF34040B040B040BFD04FF0B%0B2DFD06FF83040B040B0458FFFF0B0B040B040B05FD07FF040B040B040B%2DFFFFFF580B040B58FD07FF2D0B040B040B04FD06FF830B0B0B050B58FD%05FF580B83FD0AFFA80B0B050B0B0B050BCFFFFFFF2D0B050B34FD07FF83%0B050B0B0B0583FFFF830B0B0B33FD05FF580B050B0B0B83FFFFAE050B0B%0B050B58FD05FF330B0B0B050B0BCFFFFFFF58050B0B58FD08FFFD040B05%0BFD05FF830B040B040B040B58FD04FF2D33FD0BFF0B0B040B040B040B04%34FFFF830B040B0458FD07FFAE040B040B040B0BFFFF2D040B040B2DAEFF%FF580B040B040B2DFD04FF83040B040B040B2DA8FFAE2D0B040B040B0483%FD04FF0B0B040B2DFD09FF0B0B040B04FD04FF832D050B050B050B050B7D%FFFFFF34FD0AFFAE0B0B050B050B050B050B0558AE2D050B050B0583FD06%FF0B0B050B050B050B2DA8050B050B050B052D050B050B050B05CFFD05FF%83050B050B050B050B050B050B050B0B83FD04FF0B0B050B050B34FD08FF%AE050B050BFFFFFF830B040B040B040B040B040B58FD0CFFA8040B040B04%0B040B040B040B042D040B040B040B0483FD04FF0B0B040B040B040B040B%040B040B040B040B040B040B040B2DAEFD07FF83050B040B040B040B040B%040B0BA8FD04FF0B0B040B040B040B2DFD08FF83040B04FFFFFF342D342D%342D342D342D342D34A8FD0BFF2D342D342D342D342D342D342D342D342D%342D342D342DCFFFFF58342D342D342D342D342D342D342D342D2D05FD04%0B5883FD0BFF832D050B0B0B050B0B3459FD05FF58342D342D342D342D34%83FD08FF5F0B0BFD5DFF83A8838383FD1CFF5804FD7EFFAE2DFD7FFFA8FD%FCFFFD88FFAE3458FFFF835858FD07FF585834AEFF833483FD08FF5858A8%FD07FF58587DFFFF835858FD07FF8334FD0458FD07FFA85858583459A8FD%08FF832D2D2D83FD07FF833483FD07FF835858345858AEFD04FFA8585883%FFFF58587CFFFF830B0BFFFF5F0B34FD07FF34050B34FF580B58FD08FF0B%05A8FD07FF580B2DFFFF2D0B2DFD07FF2D0B0B0B0534FD07FFA80B0B050B%0B34FD07FF58050B0B0B58FD07FF2D0B2DFD07FF2D0B050B0B0B83FD05FF%2D0B0BFF580B05FFFFFF83040BFFFF580B2DFD07FF2D0B040BA8580458FD%08FF040B83FD07FF7D0B04AEFF0B0483FD07FF2D0458FD0AFF830B04830B%0B04FD07FF2D0B0BAE83AEFD07FF2D0433FD07FFAE832D045883FD06FFAE%050B580B0458FFFFFF830B05FFFF580534FD07FF34052D0558580B58FD08%FF0B05A8FD08FF050B7DA8052DFD08FF2D0B0B342D58FD07FFA8050B2D0B%0534FD07FF34050B0B83AEFD07FF2D0B2DFD09FF2D0B58FD08FF58050B05%2DAEFFFFFF83040BFFFF330B0BFD07FF0B0B580B04580458FD08FF040B83%FD08FF340434330B2DFD08FF2D040B040B2DFD07FF830B040B040BA8FD07%FF832D040B042DFD07FF2D042DFD09FF2D0458FD09FF2D040B58FD04FF83%0B05FFFF340558FD07FF340BA8330B0B0B58FD08FF0B0BA8FD08FF830B0B%2D0583FD08FF2D0B58FD0AFFA8050B832D0583FD09FFCF330B0BFD07FF2D%0B2DFD09FF2D0B58FD09FF580B0BFD06FF040B2D58040B58FD07FF0B0B83%AE040B0458FD08FF040B83FD09FF040B040BFD09FF33042D585858FD07FF%830B04FF2D0B0BFD07FF2D34340B040BFD07FF33042DFD09FF330458FD09%FF58042DFD06FF83050B050B2DFD08FF3405A8FF58050B58FD08FF0B05A8%FD09FF58050B34FD09FF2D0B050B050BFD07FFA8050BFF83050BA8FD06FF%34050B050B58FD07FF2D0B2DFD09FF2D0B58FD09FF580B2DFD08FF838383%FD09FF8383A8FFA88383AEFD08FF8383A8FD09FFA88383AEFD09FFA8FD05%83FD07FFA88383FFFF8383FD08FF838383A8FD08FFA883A8FD09FFA883AE%FD09FFAE83A8FFFFFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp1 Bn%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7997.0776 7795 m-7997.0776 7771 L-8047.0776 7771 L-8047.0776 7795 L-7997.0776 7795 Lnu0 Ap0 O1 g-8017.0776 7793 m-8029.2881 7796.0527 -8037.771 7786.061 -8047.0776 7778.9512 CF-8007.0776 7793 m-8023.4561 7797.0942 -8033.1279 7777.7222 -8047.0776 7773.3154 CF-8047.0776 7773 m-8027.0776 7768 -8017.0776 7798 -7997.0776 7793 CF-8037.0776 7773 m-8020.7002 7768.9058 -8011.0273 7788.2778 -7997.0776 7792.6846 CF-8027.0776 7773 m-8014.8682 7769.9473 -8006.3838 7779.939 -7997.0776 7787.0488 CF-8007.0776 7773 m-8003.4561 7772.0942 -8000.1626 7772.3408 -7997.0776 7773.3154 CF-8037.0776 7793 m-8040.7002 7793.9058 -8043.9927 7793.6592 -8047.0776 7792.6846 CF-8007.1094 7773.125 m-8013.229 7771.6162 -8017.1094 7773.125 V-8021.2046 7771.6479 -8027.1094 7773.125 V-8032.0718 7771.4497 -8037.1094 7773.125 V-8043.125 7771.5742 -8047.1094 7773.125 V-8047.1094 7792.8096 L-8044.0234 7793.7842 -8040.625 7793.9912 -8036.707 7792.9082 C-8030.541 7794.4912 -8026.791 7792.9082 V-8021.791 7794.4912 -8016.707 7792.8242 V-8012.375 7794.4082 -8006.707 7792.9082 V-8001.207 7794.3242 -7997.1094 7793.125 V-7997.1094 7773.4399 L-7999.853 7772.4287 -8002.979 7771.9287 -8007.1094 7773.125 Cf0 R0 G1 J 1 j 0.5 w-8027.0776 7793 m-8034.8682 7794.9473 -8041.1406 7791.585 -8047.0776 7787.0488 CS-8017.0776 7793 m-8029.2881 7796.0527 -8037.771 7786.061 -8047.0776 7778.9512 CS-8007.0776 7793 m-8023.4561 7797.0942 -8033.1279 7777.7222 -8047.0776 7773.3154 CS-8047.0776 7773 m-8027.0776 7768 -8017.0776 7798 -7997.0776 7793 CS-8037.0776 7773 m-8020.7002 7768.9058 -8011.0273 7788.2778 -7997.0776 7792.6846 CS-8027.0776 7773 m-8014.8682 7769.9473 -8006.3838 7779.939 -7997.0776 7787.0488 CS-8017.0776 7773 m-8009.2881 7771.0527 -8003.0142 7774.415 -7997.0776 7778.9512 CS-8007.0776 7773 m-8003.4561 7772.0942 -8000.1626 7772.3408 -7997.0776 7773.3154 CS-8037.0776 7793 m-8040.7002 7793.9058 -8043.9927 7793.6592 -8047.0776 7792.6846 CSUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 10)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8046.3281 7794 m-7996.2202 7794 L-7996.2202 7737.9761 L-8046.3281 7737.9761 L-8046.3281 7794 Lnu0 O0.1 1 1 0 k-8009.229 7759.5752 m-8011.0454 7753.0962 -8021.1519 7756.4658 Y-8021.1182 7756.5303 L-8031.2271 7753.1606 -8033.042 7759.6401 V-8039.0034 7777.0063 -8033.8198 7783.7446 V-8027.0806 7793.3369 -8022.9326 7793.3369 V-8019.3374 7793.2705 L-8015.1914 7793.2705 -8008.4526 7783.6816 Y-8003.269 7776.9424 -8009.229 7759.5752 Yfu0 0 0 1 k-8013.7202 7737.9761 m-8014.4438 7739.4199 -8015.251 7740.4751 V-8014.7334 7740.063 -8013.8433 7739.1919 -8013.7202 7737.9761 Cf-8027.3921 7740.4858 m-8028.1982 7739.4302 -8028.9214 7737.9863 Y-8028.7998 7739.2026 -8027.9097 7740.0737 -8027.3921 7740.4858 CfU0 0.61 0.74 0 k-8012.9258 7762.4609 m-8014.231 7757.7959 -8021.5098 7760.2217 Y-8021.4849 7760.269 L-8028.7642 7757.8433 -8030.0698 7762.5078 V-8034.3618 7775.0122 -8030.6294 7779.8633 V-8025.7759 7786.769 -8022.791 7786.769 V-8020.2026 7786.7222 L-8017.2158 7786.7222 -8012.3638 7779.8174 Y-8008.6318 7774.9639 -8012.9258 7762.4609 Yfu1 Ap0.73 0.43 1 0.22 k0 R0 0 0 1 K-8016.9502 7765.2754 m-8016.1406 7765.2754 -8015.4834 7764.6182 -8015.4834 7763.8096 c-8015.4834 7763 -8016.1406 7762.3423 -8016.9502 7762.3423 c-8017.7598 7762.3423 -8018.417 7763 -8018.417 7763.8096 c-8018.417 7764.6182 -8017.7598 7765.2754 -8016.9502 7765.2754 cb-8016.6914 7776.9966 m-8015.4082 7776.9966 -8014.3687 7776.1201 -8014.3687 7775.042 c-8014.3687 7773.9614 -8015.4082 7773.0874 -8016.6914 7773.0874 c-8017.9727 7773.0874 -8019.0122 7773.9614 -8019.0122 7775.042 c-8019.0122 7776.1201 -8017.9727 7776.9966 -8016.6914 7776.9966 cb-8016.1616 7788.7866 m-8014.6094 7788.7866 -8013.3521 7788.1294 -8013.3521 7787.3218 c-8013.3521 7786.5122 -8014.6094 7785.8545 -8016.1616 7785.8545 c-8017.7134 7785.8545 -8018.9727 7786.5122 -8018.9727 7787.3218 c-8018.9727 7788.1294 -8017.7134 7788.7866 -8016.1616 7788.7866 cb-8011.938 7760.5264 m-8011.1958 7760.5264 -8010.5942 7759.8154 -8010.5942 7758.937 c-8010.5942 7758.0591 -8011.1958 7757.3481 -8011.938 7757.3481 c-8012.6807 7757.3481 -8013.2822 7758.0591 -8013.2822 7758.937 c-8013.2822 7759.8154 -8012.6807 7760.5264 -8011.938 7760.5264 cb-8010.3311 7782.083 m-8011.2095 7781.7354 -8011.4766 7780.335 -8010.9302 7778.9546 c-8010.3838 7777.5752 -8009.229 7776.7358 -8008.3511 7777.085 c-8007.4727 7777.4326 -8007.2046 7778.833 -8007.751 7780.2134 c-8008.2974 7781.5942 -8009.4526 7782.4321 -8010.3311 7782.083 cbu-8025.3838 7765.1592 m-8026.1934 7765.1592 -8026.8511 7764.502 -8026.8511 7763.6934 c-8026.8511 7762.8833 -8026.1934 7762.2266 -8025.3838 7762.2266 c-8024.5762 7762.2266 -8023.9194 7762.8833 -8023.9194 7763.6934 c-8023.9194 7764.502 -8024.5762 7765.1592 -8025.3838 7765.1592 cb-8025.6431 7776.8799 m-8026.9263 7776.8799 -8027.9658 7776.0049 -8027.9658 7774.9248 c-8027.9658 7773.8447 -8026.9263 7772.9697 -8025.6431 7772.9697 c-8024.3618 7772.9697 -8023.3232 7773.8447 -8023.3232 7774.9248 c-8023.3232 7776.0049 -8024.3618 7776.8799 -8025.6431 7776.8799 cb-8026.1738 7788.6714 m-8027.7246 7788.6714 -8028.9834 7788.0142 -8028.9834 7787.2041 c-8028.9834 7786.3936 -8027.7246 7785.7383 -8026.1738 7785.7383 c-8024.6206 7785.7383 -8023.3633 7786.3936 -8023.3633 7787.2041 c-8023.3633 7788.0142 -8024.6206 7788.6714 -8026.1738 7788.6714 cb-8030.395 7760.4097 m-8031.1382 7760.4097 -8031.7402 7759.6982 -8031.7402 7758.8218 c-8031.7402 7757.9438 -8031.1382 7757.2334 -8030.395 7757.2334 c-8029.6538 7757.2334 -8029.0518 7757.9438 -8029.0518 7758.8218 c-8029.0518 7759.6982 -8029.6538 7760.4097 -8030.395 7760.4097 cb-8032.0034 7781.9678 m-8031.126 7781.6201 -8030.8574 7780.2192 -8031.4038 7778.8374 c-8031.9502 7777.457 -8033.1055 7776.6201 -8033.9834 7776.9678 c-8034.8618 7777.3169 -8035.1313 7778.7178 -8034.585 7780.0967 c-8034.0386 7781.4775 -8032.8833 7782.3154 -8032.0034 7781.9678 cbUU0 Ap0 0 0 1 k-8021.459 7760.6553 m-8021.459 7793.3145 lFu-8005.7183 7746.5303 m-8006.4097 7745.8369 -8009.3462 7746.7026 Y-8010.5566 7746.874 -8010.3838 7749.2935 Y-8009.3462 7751.3682 -8010.0386 7751.1943 Y-8010.6274 7751.1943 -8012.1826 7751.1143 -8013.1094 7751.063 C-8013.4502 7749.6689 -8014.9409 7748.4751 -8017.0498 7747.7695 C-8015.0854 7744.4775 -8016.8447 7743.7954 -8018.6206 7743.79 C-8018.6367 7743.7026 -8018.6602 7743.6162 -8018.687 7743.5327 C-8016.437 7743.5791 -8015.9663 7741.2593 Y-8015.7329 7741.063 -8015.4878 7740.7866 -8015.251 7740.4751 C-8015.4688 7740.647 -8015.6226 7740.7393 Y-8016.5854 7740.7393 -8018.2046 7742.4946 -8018.8242 7743.207 C-8019.2471 7742.4434 -8020.1807 7741.9111 -8021.271 7741.9111 c-8022.3975 7741.9111 -8023.3599 7742.479 -8023.7583 7743.2847 C-8024.3262 7742.624 -8026.0239 7740.751 -8027.022 7740.751 C-8027.1738 7740.6577 -8027.3921 7740.4858 V-8027.1558 7740.7935 -8026.9102 7741.0737 -8026.6758 7741.269 C-8026.1914 7743.6558 -8023.853 7743.5342 V-8023.8726 7743.5889 -8023.895 7743.6431 -8023.9082 7743.7026 C-8027.251 7743.6929 -8026.2646 7746.3174 -8025.5386 7747.6602 C-8027.9194 7748.376 -8029.5918 7749.7007 -8029.8511 7751.25 C-8030.7754 7751.2998 -8032.001 7751.3584 -8032.5078 7751.3584 C-8033.2002 7751.5313 -8032.1626 7749.458 V-8031.9902 7747.0391 -8033.2002 7746.8662 V-8036.1377 7746.002 -8036.8286 7746.6934 V-8037.519 7747.5566 -8038.3838 7746.3462 V-8037.519 7748.0752 -8035.6182 7747.5566 V-8033.0254 7746.8662 -8033.7183 7748.5938 V-8034.2358 7752.0498 -8032.5078 7752.7402 V-8030.3618 7753.8545 -8028.6094 7754.0889 V-8028.2358 7754.4146 -8027.791 7754.7114 -8027.2856 7754.9766 C-8029.8838 7755.0474 -8032.5518 7755.9209 -8033.4033 7758.9561 C-8033.8433 7760.2432 -8034.3794 7762.2432 V-8035.4302 7762.8257 -8036.6294 7764.0078 -8037.8687 7766.2622 C-8038.7217 7769.4502 -8039.4946 7764.7129 V-8040.7246 7761.6494 -8041.978 7761.5386 V-8040.7974 7763.2871 -8041.231 7764.416 V-8039.6274 7768.917 -8037.9414 7767.8994 V-8036.4263 7767.2202 -8035.0161 7764.8154 V-8035.3975 7766.4966 -8035.7598 7768.417 -8036.002 7770.3906 C-8036.8159 7770.3975 L-8038.6782 7769.479 -8038.6538 7772.959 V-8039.4502 7776.9458 -8038.687 7779.6826 V-8037.9746 7782.1504 -8040.4551 7780.9302 V-8041.6118 7781.3242 -8042.311 7780.7881 V-8044.7158 7779.4126 -8046.3281 7781.124 V-8044.4746 7780.8799 -8043.7759 7781.417 V-8042.3066 7781.5615 -8042.2246 7782.1782 V-8039.2842 7782.855 -8038.5151 7782.0767 V-8036.7446 7781.2134 -8037.458 7778.3599 V-8038.207 7770.4814 -8036.647 7772.4058 V-8036.4458 7772.4214 -8036.2065 7772.5176 V-8036.479 7776.4326 -8036.1294 7780.3247 -8034.3242 7782.8511 C-8037.7817 7775.333 -8032.625 7760.3042 Y-8031.2886 7755.5303 -8025.4546 7756.1016 -8022.4727 7756.7344 C-8022.3994 7758.1294 -8022.165 7759.9487 -8021.459 7760.6553 C-8020.541 7758.6958 -8020.563 7757.0737 V-8019.4038 7756.7217 -8012.6094 7754.8447 -8009.7759 7758.3369 C-8010.7583 7755.8135 -8013.1538 7755.0186 -8015.5278 7754.9194 C-8014.9946 7754.6318 -8014.5322 7754.3047 -8014.1538 7753.9502 C-8012.3687 7753.7866 -8010.0386 7752.5767 Y-8008.3086 7751.8857 -8008.8286 7748.4302 Y-8009.519 7746.7026 -8006.9263 7747.3936 Y-8005.0278 7747.9111 -8004.1626 7746.1841 Y-8005.0278 7747.3936 -8005.7183 7746.5303 Yf-8000.2358 7780.9521 m-8000.9351 7781.4897 -8002.0913 7781.0938 Y-8004.5718 7782.3135 -8003.8608 7779.8462 Y-8003.0967 7777.1104 -8003.8911 7773.1226 Y-8003.8687 7769.645 -8005.729 7770.5601 Y-8006.3618 7770.5562 L-8006.647 7768.6118 -8007.0322 7766.7554 -8007.4175 7765.1694 C-8006.041 7767.4199 -8004.6055 7768.063 Y-8002.9194 7769.082 -8001.3154 7764.5791 Y-8001.749 7763.4502 -8000.5698 7761.7026 Y-8001.8218 7761.813 -8003.0518 7764.876 Y-8003.8257 7769.6152 -8004.6782 7766.4272 Y-8005.9058 7764.1904 -8007.0967 7763.0098 -8008.1416 7762.4233 C-8008.5303 7761.063 -8008.8135 7760.2393 Y-8009.0278 7759.4727 -8009.3618 7758.8486 -8009.7759 7758.3369 C-8009.707 7758.5127 -8009.645 7758.6982 -8009.5903 7758.8911 C-8003.6294 7776.2593 -8008.8135 7782.9966 V-8015.5518 7792.5874 -8019.7002 7792.5874 V-8023.2935 7792.6514 L-8027.4414 7792.6514 -8034.1807 7783.0615 Y-8034.231 7782.9961 -8034.2734 7782.9214 -8034.3242 7782.8511 C-8034.0654 7783.4146 -8033.7646 7783.9409 -8033.4033 7784.4097 C-8026.6641 7794 -8022.5166 7794 V-8018.9214 7793.9346 L-8014.7759 7793.9346 -8008.0366 7784.3447 Y-8005.9082 7781.5767 -8005.6582 7777.0176 -8006.105 7772.6055 C-8005.9834 7772.5752 -8005.8975 7772.5679 Y-8004.3394 7770.647 -8005.0874 7778.5249 Y-8005.8022 7781.3794 -8004.0303 7782.2402 Y-8003.2622 7783.0186 -8000.3223 7782.3423 Y-8000.2417 7781.7256 -7998.771 7781.5806 Y-7998.0718 7781.0449 -7996.2202 7781.2881 Y-7997.8306 7779.5767 -8000.2358 7780.9521 YfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8046.3281 7794 m-7981.5142 7794 L-7981.5142 7729.9023 L-8046.3281 7729.9023 L-8046.3281 7794 Lnu0 O0 g-8012.0254 7752.4297 m-8013.937 7729.9023 L-8015.8486 7752.4297 L-8015.231 7752.3066 -8014.5918 7752.2402 -8013.937 7752.2402 c-8013.2822 7752.2402 -8012.6431 7752.3066 -8012.0254 7752.4297 Cf-8023.5679 7760.3975 m-8046.3281 7762.3306 L-8023.4414 7764.2734 L-8023.6138 7763.5474 -8023.7119 7762.793 -8023.7119 7762.0161 c-8023.7119 7761.4634 -8023.6558 7760.9248 -8023.5679 7760.3975 Cf-8018.8462 7753.5718 m-8032.4902 7744.8047 L-8022.543 7757.377 L-8021.6846 7755.791 -8020.3994 7754.4766 -8018.8462 7753.5718 Cf-8015.8086 7771.6074 m-8013.9063 7794 L-8012.0049 7771.5967 L-8012.6294 7771.7222 -8013.2754 7771.791 -8013.937 7771.791 c-8014.5776 7771.791 -8015.2007 7771.7246 -8015.8086 7771.6074 Cf-8004.2886 7763.5073 m-7981.5142 7761.5728 L-8004.4102 7759.6289 L-8004.4102 7759.8506 L-8004.2534 7760.5488 -8004.1616 7761.2695 -8004.1616 7762.0161 c-8004.1616 7762.5234 -8004.2129 7763.019 -8004.2886 7763.5073 Cf-8022.4414 7766.8262 m-8032.4922 7779.5298 L-8018.6055 7770.6055 L-8020.21 7769.7305 -8021.5391 7768.416 -8022.4414 7766.8262 Cf-8005.3242 7757.3945 m-7995.2026 7744.6055 L-8009.0942 7753.5313 L-8007.5039 7754.4414 -8006.1914 7755.7793 -8005.3242 7757.3945 Cf-8009.0166 7770.4512 m-7995.2007 7779.3281 L-8005.2935 7766.5728 L-8006.147 7768.1895 -8007.4434 7769.5313 -8009.0166 7770.4512 Cf-8005.2158 7766.6138 m-8004.7134 7765.6641 -8004.3706 7764.6206 -8004.2026 7763.519 c-8004.127 7763.0298 -8004.0762 7762.5273 -8004.0762 7762.0161 c-8004.0762 7761.2642 -8004.167 7760.5352 -8004.3257 7759.8311 c-8004.5234 7758.957 -8004.833 7758.124 -8005.2456 7757.3545 c-8006.123 7755.7246 -8007.4463 7754.374 -8009.0518 7753.4561 c-8009.957 7752.9375 -8010.9502 7752.5537 -8012.0078 7752.3457 c-8012.6318 7752.2207 -8013.2778 7752.1519 -8013.937 7752.1519 c-8014.5967 7752.1519 -8015.2422 7752.2207 -8015.8662 7752.3457 c-8016.9502 7752.561 -8017.9658 7752.957 -8018.8906 7753.4961 c-8020.459 7754.4102 -8021.7559 7755.7358 -8022.6182 7757.335 c-8023.125 7758.2695 -8023.4727 7759.2969 -8023.6538 7760.3823 c-8023.7422 7760.916 -8023.7998 7761.459 -8023.7998 7762.0161 c-8023.7998 7762.8008 -8023.6982 7763.561 -8023.5254 7764.293 c-8023.3086 7765.207 -8022.9678 7766.0737 -8022.5142 7766.8706 c-8021.6074 7768.4727 -8020.2666 7769.8008 -8018.645 7770.6826 c-8017.7759 7771.1553 -8016.8271 7771.498 -8015.8242 7771.6934 c-8015.2129 7771.811 -8014.583 7771.8774 -8013.937 7771.8774 c-8013.269 7771.8774 -8012.6177 7771.8086 -8011.9878 7771.6826 c-8010.9063 7771.4673 -8009.894 7771.0654 -8008.9727 7770.5273 c-8007.3838 7769.5977 -8006.0786 7768.2441 -8005.2158 7766.6138 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8037.0776 7795 m-8037.0776 7771 L-8047.0776 7771 L-8047.0776 7795 L-8037.0776 7795 Lnuu0 Ap0 O1 g-8037.7334 7786.5361 m-8037.3154 7785.4351 -8037.0776 7784.2471 -8037.0776 7783 c-8037.0776 7781.1377 -8037.5962 7779.3999 -8038.4814 7777.9072 c-8040.2246 7774.9736 -8043.4175 7773 -8047.0776 7773 C-8047.0776 7793 L-8046.7578 7793 -8046.4414 7792.9814 -8046.1294 7792.9521 c-8044.2402 7792.7754 -8042.5078 7792.0649 -8041.0718 7790.9824 c-8039.5742 7789.8545 -8038.4082 7788.3184 -8037.7334 7786.5361 cf0 R0 G1 J 1 j 0.5 w-8047.0776 7773.3174 m-8044.0479 7774.2744 -8041.2202 7775.9326 -8038.4814 7777.9072 CS-8047.0776 7778.9512 m-8043.9263 7781.3569 -8040.8706 7784.0874 -8037.7334 7786.5361 CS-8041.0718 7790.9824 m-8043.1382 7789.8911 -8045.127 7788.5342 -8047.0776 7787.043 CS-8046.1294 7792.9521 m-8046.4463 7792.8682 -8046.7646 7792.7856 -8047.0776 7792.6865 CS-8041.0718 7790.9824 m-8042.5078 7792.0649 -8044.2402 7792.7744 -8046.1294 7792.9521 CS-8037.7334 7786.5361 m-8037.3154 7785.4351 -8037.0776 7784.2471 -8037.0776 7783 c-8037.0776 7781.1377 -8037.5962 7779.3999 -8038.4814 7777.9072 CS-8047.0776 7793 m-8046.7578 7793 -8046.4414 7792.9814 -8046.1294 7792.9521 CS-8041.0718 7790.9824 m-8039.5742 7789.8545 -8038.4082 7788.3184 -8037.7334 7786.5361 CS-8038.4814 7777.9072 m-8040.2246 7774.9736 -8043.4175 7773 -8047.0776 7773 CSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 34)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8046.353 7794.0264 m-7990.3818 7794.0264 L-7990.3818 7732.5342 L-8046.353 7732.5342 L-8046.353 7794.0264 Lnuu0 O0.0745 0.9 0.9019 0.18 k0 R0 0 0 1 K1 J 1 j 0.0518 w-8019.9263 7770.7217 m-8019.687 7781.5215 -8025.207 7791.8398 v-8024.729 7794 -8023.2866 7794 v-8023.5278 7790.6406 -8022.5674 7790.1606 v-8018.248 7778.1602 -8018.9658 7770.2402 v-8019.9263 7770.7217 lb-8019.9263 7770.7217 m-8021.6074 7776 -8033.3662 7777.2017 v-8037.687 7777.6807 -8037.9263 7779.1206 v-8031.4482 7769.519 -8030.4878 7769.7607 v-8043.687 7764.001 -8046.3281 7758.7202 v-8041.2866 7761.6006 -8037.9263 7759.4399 v-8030.0078 7759.2017 -8024.9678 7761.3618 v-8021.1279 7763.2817 -8029.0479 7747.2017 v-8025.207 7758.9609 -8021.6074 7732.561 v-8020.647 7737.8408 -8019.207 7739.2817 v-8013.207 7746.9609 -8014.167 7749.1206 v-8014.647 7752.9609 -8010.0874 7746.7207 v-8010.3281 7756.3218 -8012.729 7759.6807 v-8014.8862 7763.2817 -8008.8862 7761.1206 v-8002.8862 7759.2017 -7997.6074 7760.8809 v-7992.0874 7762.3198 -7990.4082 7759.4399 v-8002.167 7771.9209 -8007.9263 7771.6807 v-8006.2471 7775.2817 l-8003.8462 7780.0806 -8004.3281 7781.2817 v-8019.5962 7771.8833 -8019.9263 7770.7217 vb-8019.9263 7770.7217 m-8017.2866 7752.2402 -8019.9263 7744.561 v-8022.3257 7734.001 -8021.6074 7732.561 vS-8018.4878 7759.4399 m-8012.4878 7754.6406 -8011.2866 7749.3599 vS-8018.4878 7758.7202 m-8027.3662 7751.041 -8029.0479 7747.2017 vS-7990.4082 7759.4399 m-7991.6074 7761.6006 -8019.687 7769.7607 y-8024.729 7764.2422 -8036.248 7761.8408 v-8043.9263 7760.8809 -8046.3281 7758.7202 vS-8036.9658 7777.6807 m-8025.4463 7768.5615 -8019.687 7769.7607 y-8005.5273 7776 -8004.3281 7781.2817 vSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 36)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8046.1777 7793.9961 m-7996.2881 7793.9961 L-7996.2881 7742.9258 L-8046.1777 7742.9258 L-8046.1777 7793.9961 Lnu0 O0.025 0.1 0.475 0 k-8024.478 7761.9038 m-8026.8042 7760.813 -8029.019 7760.4434 -8030.7007 7760.9238 c-8031.3794 7761.1167 -8031.9727 7761.4473 -8032.4502 7761.9238 c-8032.9282 7762.4023 -8033.2578 7762.9951 -8033.4502 7763.6729 c-8034.3359 7766.771 -8032.3374 7771.6777 -8028.251 7775.7666 c-8024.1616 7779.8535 -8019.2578 7781.8511 -8016.1558 7780.9663 c-8015.479 7780.771 -8014.8862 7780.4424 -8014.4082 7779.9658 c-8013.9302 7779.4878 -8013.603 7778.895 -8013.4097 7778.2168 c-8012.8447 7776.2466 -8013.4502 7773.5449 -8015.0127 7770.7886 c-8015.9097 7769.21 -8017.1182 7767.6138 -8018.6074 7766.123 c-8020.478 7764.2534 -8022.519 7762.8242 -8024.478 7761.9038 cfu0.0035 0.014 0.0665 0 k-8023.5454 7760.9727 m-8026.1582 7760.0215 -8028.7246 7759.9688 -8030.7007 7760.9238 C-8029.019 7760.4434 -8026.8042 7760.813 -8024.478 7761.9038 c-8023.9473 7762.1543 -8023.4082 7762.4434 -8022.8706 7762.7681 C-8021.2266 7762.0537 L-8021.9946 7761.6177 -8022.771 7761.2534 -8023.5454 7760.9727 cf0.015 0.06 0.285 0 k-8021.2266 7762.0537 m-8022.8706 7762.7681 L-8021.4238 7763.6353 -8019.9702 7764.7607 -8018.6074 7766.123 c-8018.4814 7766.25 -8018.3599 7766.3774 -8018.2378 7766.5054 C-8017.543 7764.8633 L-8018.6982 7763.7231 -8019.9473 7762.7817 -8021.2266 7762.0537 CfUu0.039 0.156 0.741 0 k-8012.0142 7749.4038 m-8012.3022 7749.6914 -8023.5454 7760.9727 Y-8022.771 7761.2534 -8021.9946 7761.6177 -8021.2266 7762.0537 C-8007.7422 7748.5703 L-8009.3887 7748.0991 -8010.9678 7748.355 -8012.0142 7749.4038 cf0.025 0.1 0.475 0 k-8007.7422 7748.5703 m-8021.2266 7762.0537 L-8019.9121 7762.8022 -8018.625 7763.7754 -8017.4414 7764.957 c-8017.4111 7764.9863 -8017.3862 7765.0161 -8017.355 7765.0449 C-8003.6689 7751.3574 L-8003.854 7751.1328 -8004.0479 7750.9146 -8004.2578 7750.7007 c-8005.3374 7749.623 -8006.5586 7748.9082 -8007.7422 7748.5703 CfUu0.0115 0.046 0.2185 0 k-7998.2622 7758.3926 m-7995.8618 7755.9897 -7995.6626 7752.0898 -7997.4658 7748.6978 C-7998.623 7749.1182 L-7996.4214 7752.4961 -7996.167 7756.2954 -7998.2622 7758.3926 cf0.015 0.06 0.285 0 k-8005.8618 7743.5962 m-8004.9097 7742.9258 L-8007.5322 7742.3521 -8010.1582 7742.9146 -8011.9482 7744.7065 c-8010.499 7743.2578 -8008.2358 7742.9302 -8005.8618 7743.5962 Cf0.0295 0.118 0.5605 0 k-8005.8618 7743.5962 m-8008.2358 7742.9302 -8010.499 7743.2578 -8011.9482 7744.7065 c-8013.3462 7746.1055 -8013.6982 7748.2642 -8013.123 7750.5474 C-8011.1953 7747.5449 -8007.7358 7748.5537 V-8005.9126 7743.6313 L-8005.8618 7743.5962 Lf*u1 D0.048 0.192 0.912 0 k-7998.2622 7758.3926 m-7999.6094 7759.7383 -8001.6602 7760.1138 -8003.8511 7759.627 C-8013.999 7769.7734 L-8014.0977 7769.5679 -8014.0977 7769.5679 -8013.999 7769.7734 c-8012.5518 7772.8145 -8012.2974 7775.916 -8013.4097 7778.2168 C-8012.8447 7776.2466 -8013.4502 7773.5449 -8015.0127 7770.7886 c-8015.833 7769.3442 -8016.9194 7767.8848 -8018.2378 7766.5054 C-8017.543 7764.8633 L-8017.5098 7764.8945 -8017.4746 7764.9238 -8017.4414 7764.957 c-8017.4111 7764.9878 -8017.3838 7765.0176 -8017.355 7765.0474 c-8017.355 7765.0474 -8017.355 7765.0449 V-8003.6689 7751.3574 L-7998.6538 7749.1289 L-7998.623 7749.1182 L-7996.4214 7752.4961 -7996.167 7756.2954 -7998.2622 7758.3926 cf*U0 D0.0215 0.086 0.4085 0 k-8004.9097 7742.9258 m-8005.8618 7743.5962 L-8004.0122 7744.1113 -8002.0938 7745.229 -8000.4414 7746.8833 c-7999.7334 7747.5889 -7999.1274 7748.3418 -7998.623 7749.1182 C-7997.4658 7748.6978 L-7997.9834 7747.7246 -7998.665 7746.793 -7999.5078 7745.9512 c-8001.0977 7744.3594 -8003.0034 7743.3423 -8004.9097 7742.9258 Cf0.0205 0.082 0.3895 0 k-7998.623 7749.1182 m-7999.1274 7748.3418 -7999.7334 7747.5889 -8000.4414 7746.8833 c-8002.0938 7745.229 -8004.0122 7744.1113 -8005.8618 7743.5962 C-8005.9126 7743.6313 L-8007.7358 7748.5537 L-8006.5391 7748.9214 -8005.3154 7749.6431 -8004.2578 7750.7007 c-8004.0479 7750.9146 -8003.854 7751.1328 -8003.6689 7751.3574 C-7998.6538 7749.1289 L-7998.623 7749.1182 LfUu0.445 0.356 0.267 0 k-8046.1777 7793.9961 m-8024.2847 7770.9688 L-8024.5278 7770.6494 -8024.9023 7770.6138 -8025.2158 7770.6592 C-8029.5078 7775.2886 -8040.6426 7787.4561 -8045.0542 7792.2793 C-8045.8926 7793.3521 -8046.3281 7793.9937 -8046.1777 7793.9961 Cf0.15 0.12 0.09 0 k-8046.1616 7793.9961 m-8044.9878 7793.7031 -8024.021 7772.0034 Y-8024.021 7771.502 -8024.127 7771.1758 -8024.2847 7770.9688 C-8046.1777 7793.9961 L-8046.1719 7793.9961 -8046.1694 7794 -8046.1616 7793.9961 cf0.2 0.16 0.12 0 k-8045.0542 7792.2793 m-8040.6426 7787.4561 -8029.5078 7775.2886 -8025.2158 7770.6592 C-8025.5278 7770.7041 -8025.7798 7770.8306 Y-8026.9302 7771.1328 -8040.9014 7786.9614 -8045.0542 7792.2793 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 37)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8045.2778 7793.2319 m-7995.3662 7793.2319 L-7995.3662 7729.1152 L-8045.2778 7729.1152 L-8045.2778 7793.2319 Lnu0 O0 0 0 1 k0 R0 0 0 1 K0 w-7995.563 7729.1152 m-7995.9346 7729.248 -7996.3135 7729.2832 -7996.7114 7729.2031 c-7996.814 7729.168 l-7996.853 7729.1602 -7996.8975 7729.1782 -7996.9302 7729.1992 c-7997.271 7729.3926 l-8001.041 7731.2959 -8004.4238 7733.897 -8006.8271 7737.4473 c-8008.291 7739.5918 -8009.4502 7741.8794 -8011.127 7743.856 c-8011.501 7744.209 -8011.5034 7744.7729 -8011.1616 7745.1313 c-8010.8223 7745.501 -8010.2456 7745.5078 -8009.8887 7745.165 c-8009.731 7745.21 l-8009.5918 7745.1289 -8009.4014 7745.0703 -8009.3511 7744.957 c-8008.1807 7742.2031 -8007.5166 7739.5137 -8005.7617 7737.1382 c-8003.499 7734.0942 -8000.5054 7731.9946 -7997.3574 7730.0234 c-7996.6943 7729.6055 L-7996.8242 7729.6353 L-7996.0977 7729.6426 l-7996.1182 7729.6113 -7996.1279 7729.5962 -7996.1494 7729.5649 C-7995.9346 7729.5234 -7995.7046 7729.4746 -7995.4902 7729.4336 c-7995.4038 7729.4238 -7995.3462 7729.3394 -7995.3662 7729.2383 c-7995.3774 7729.1519 -7995.4658 7729.1089 -7995.563 7729.1152 c-7995.563 7729.1152 lb-8011.5498 7742.9951 m-8011.9014 7742.8066 -8012.2935 7742.6719 -8012.5762 7742.3887 c-8018.7798 7736.1719 -8029.0078 7735.2734 -8036.377 7741.6855 C-8036.4858 7741.7817 -8036.4858 7741.957 -8036.3906 7742.0649 C-8033.3809 7740.9434 -8025.2114 7742.375 -8021.6494 7745.4121 C-8021.5806 7745.4673 -8021.4746 7745.4526 -8021.4326 7745.3711 C-8021.3774 7745.3047 -8021.394 7745.1953 -8021.4609 7745.1558 C-8024.8906 7742.0854 -8029.395 7740.29 -8034.001 7740.748 C-8031.1807 7739.1855 -8027.959 7738.4946 -8024.7266 7738.689 c-8020.042 7738.9722 -8015.791 7741.1191 -8011.6982 7743.2793 c-8011.6182 7743.3193 -8011.5254 7743.293 -8011.4834 7743.2114 C-8011.4287 7743.1313 -8011.4702 7743.0352 -8011.5498 7742.9951 cb-8020.9746 7744.3359 m-8022.5542 7748.3618 -8024.7183 7752.3198 -8028.1294 7755.0762 c-8028.293 7755.2119 -8028.3223 7755.4497 -8028.1982 7755.6055 c-8028.062 7755.7681 -8027.833 7755.7793 -8027.6758 7755.6558 c-8023.4502 7753.5967 -8020.5186 7749.1313 -8020.4902 7744.4014 c-8020.4902 7744.4014 l-8020.4609 7744.2671 -8020.563 7744.1343 -8020.6914 7744.1226 c-8020.8311 7744.1055 -8020.959 7744.1978 -8020.9746 7744.3359 c-8020.9746 7744.3359 lb-8015.269 7749.0176 m-8015.3696 7749.1816 -8015.4434 7749.3838 -8015.5898 7749.4824 c-8018.4082 7751.3906 -8021.3066 7752.6313 -8024.2129 7754.1328 c-8024.3774 7754.209 -8024.439 7754.418 -8024.3594 7754.5703 c-8024.2783 7754.7222 -8024.083 7754.7793 -8023.9175 7754.7041 c-8020.7666 7753.3232 -8016.6406 7752.5 -8015.001 7749.1802 c-8014.957 7749.1113 -8014.9727 7749.0142 -8015.0542 7748.9648 c-8015.123 7748.9199 -8015.2246 7748.9487 -8015.269 7749.0176 c-8015.269 7749.0176 lb-8014.9878 7749.918 m-8014.771 7750.4297 -8014.4702 7750.8896 -8014.3774 7751.4351 c-8013.5454 7756.2778 -8013.4434 7761.042 -8014.5762 7765.687 c-8014.5762 7765.687 l-8014.6694 7765.9526 -8014.5391 7766.2441 -8014.271 7766.3394 c-8014.0054 7766.4336 -8013.7158 7766.313 -8013.6206 7766.0479 c-8011.6206 7760.811 -8012.2246 7754.7378 -8014.6982 7749.7832 c-8014.7334 7749.7002 -8014.8257 7749.6689 -8014.9097 7749.6914 c-8014.9922 7749.7271 -8015.0254 7749.835 -8014.9878 7749.918 c-8014.9878 7749.918 lb-8013.8623 7765.5938 m-8011.2266 7763.2271 -8009.0098 7760.252 -8008.1807 7756.7358 c-8008.1807 7756.7358 l-8008.0518 7756.1816 -8008.4014 7755.623 -8008.9697 7755.4902 c-8009.5273 7755.375 -8010.0854 7755.7246 -8010.2134 7756.2793 c-8010.8926 7759.5313 -8012.1982 7762.6729 -8014.123 7765.3862 c-8014.123 7765.3862 l-8014.1738 7765.4551 -8014.1616 7765.5576 -8014.0977 7765.6201 c-8014.0273 7765.6694 -8013.9258 7765.6582 -8013.8623 7765.5938 c-8013.8623 7765.5938 lb-7998.6982 7758.1826 m-8000.0391 7753.8306 -8002.5874 7750.0698 -8006.0166 7747.1538 C-8006.0566 7747.0718 -8006.1519 7747.0322 -8006.231 7747.0854 C-8006.314 7747.127 -8006.3398 7747.2207 -8006.2998 7747.3018 C-8006.2847 7747.7886 -8006.042 7748.2334 -8005.7734 7748.5313 c-8000.7334 7754.1626 -7997.3174 7762.7202 -7999.6714 7769.9551 C-7999.4038 7764.4512 -8001.0518 7758.3008 -8004.4639 7753.6738 c-8005.4878 7752.2695 -8007.0698 7752.1206 -8008.6362 7752.2031 C-8008.73 7752.1895 -8008.811 7752.2432 -8008.8242 7752.3369 c-8008.8374 7752.4194 -8008.7822 7752.5137 -8008.6895 7752.5254 C-8005.4751 7753.7695 -8003.8154 7757.2246 -8002.4111 7760.1943 c-8000.7422 7763.7441 -8000.0298 7767.6382 -8000.333 7771.5 C-8000.373 7771.6777 -8000.4414 7773.3975 -8000.3057 7773.4102 C-8000.1582 7773.439 -8000.0366 7773.3442 -8000.0078 7773.1943 C-7999.9727 7773.0449 -7996.9702 7763.7983 -7998.6982 7758.1826 cb-8006.814 7745.4912 m-8005.7222 7741.6206 -8003.437 7738.251 -8000.8105 7735.2383 c-8000.6582 7735.105 -8000.6426 7734.8862 -8000.7778 7734.7354 c-8000.9023 7734.6006 -8001.1318 7734.582 -8001.2847 7734.7178 c-8004.6582 7737.332 -8005.7759 7741.541 -8007.123 7745.375 c-8007.123 7745.375 l-8007.1538 7745.4648 -8007.103 7745.5586 -8007.0254 7745.5874 c-8006.937 7745.6191 -8006.8442 7745.5679 -8006.814 7745.4912 c-8006.814 7745.4912 lb-8000.8594 7770.1094 m-8000.9263 7770.0566 -8001.0342 7770.083 -8001.0762 7770.1504 C-8001.291 7770.4746 -8003.019 7772.519 -8003.7202 7773.1406 c-8008.499 7777.3945 -8011.8418 7781.9609 -8019.8662 7785.7222 c-8026.7793 7788.9639 -8029.439 7791.5962 -8036.7134 7789.8262 c-8040.0142 7789.0298 -8041.3594 7788.5313 -8042.7622 7783.4551 C-8044.2754 7777.2993 -8043.1953 7779.7832 -8043.4111 7772.4385 c-8043.5498 7767.6978 -8046.3281 7756.4551 -8033.853 7742.2598 C-8033.7471 7742.1489 -8033.7617 7741.9961 -8033.8618 7741.9072 C-8033.96 7741.8022 -8034.123 7741.8159 -8034.2134 7741.916 C-8039.9063 7746.7168 -8043.3511 7753.6582 -8044.6426 7760.9424 c-8045.6143 7766.4673 -8045.248 7771.25 -8044.9937 7777.6367 c-8044.897 7780.0938 -8046.0127 7787.0718 -8041.2378 7791.0625 c-8037.7202 7794 -8032.7183 7793.5474 -8028.6826 7792.1558 c-8023.0273 7790.2119 -8018.2998 7787.1465 -8013.1982 7783.6094 c-8009.5938 7781.125 -8001.6162 7771.2847 -8000.8066 7770.3262 C-8000.7622 7770.2593 -8000.7778 7770.1504 -8000.8594 7770.1094 Cb-8035.3774 7757.3057 m-8034.4961 7756.5034 -8034.0298 7757.8457 -8033.7578 7758.6016 c-8033.4902 7759.3574 -8032.5166 7759.25 -8032.8398 7759.5728 c-8033.165 7759.8975 -8033.165 7759.9521 -8033.6514 7759.519 c-8034.1362 7759.0879 -8034.1362 7759.7358 -8034.8926 7759.25 c-8035.647 7758.7622 -8035.9727 7757.8457 -8035.3774 7757.3057 cb-8027.979 7761.9487 m-8027.6934 7761.5918 -8027.0078 7761.5718 -8026.793 7761.8945 c-8026.5776 7762.2202 -8025.6582 7762.2734 -8025.8218 7762.5967 c-8025.9814 7762.9214 -8025.9297 7763.1382 -8026.415 7762.9214 c-8026.9014 7762.7046 -8026.7402 7763.2998 -8027.2246 7763.084 c-8027.7114 7762.8672 -8028.1958 7762.2202 -8027.979 7761.9487 cb-8019.9351 7767.0791 m-8019.4482 7766.7559 -8018.207 7767.5122 -8018.7998 7767.5122 c-8019.395 7767.5122 -8018.6382 7768.2671 -8019.1802 7768.4834 c-8019.7183 7768.6992 -8019.6113 7768.4297 -8019.9351 7768.645 c-8020.2578 7768.8618 -8020.6914 7769.2393 -8020.8511 7768.4297 c-8021.0127 7767.6191 -8020.6914 7767.6191 -8020.313 7767.3496 c-8019.9351 7767.0791 -8019.9351 7767.0791 yb-8034.5679 7767.3496 m-8033.4351 7767.2422 -8034.1914 7767.998 -8033.5967 7768.4834 c-8033.0015 7768.9697 -8032.2456 7769.6177 -8033.0566 7769.3999 c-8033.8662 7769.1855 -8035.3242 7769.6719 -8035.271 7768.5386 c-8035.2158 7767.4033 -8034.96 7767.3862 -8034.5679 7767.3496 cb-8028.8975 7775.6113 m-8028.4287 7775.3442 -8029.0078 7775.7202 -8028.3574 7775.6113 c-8027.7114 7775.5039 -8027.1162 7775.6113 -8027.5479 7775.8281 c-8027.979 7776.0439 -8028.6289 7776.1519 -8028.791 7775.9897 c-8028.9526 7775.8281 -8029.2754 7775.8281 -8028.8975 7775.6113 cb-8019.395 7775.1802 m-8019.8066 7774.1802 -8018.4238 7774.4238 -8017.7754 7774.7466 c-8017.1274 7775.0718 -8016.1538 7774.4775 -8016.749 7774.9102 c-8017.3418 7775.3418 -8017.1274 7774.9102 -8017.7202 7775.2334 c-8018.3154 7775.5566 -8019.0166 7776.0977 -8019.395 7775.1802 cb-8035.0015 7781.0664 m-8035.0498 7780.0752 -8034.1362 7780.957 -8033.5967 7781.0122 c-8033.0566 7781.0664 -8032.4082 7781.0664 -8032.5713 7781.2817 c-8032.731 7781.498 -8032.7866 7781.498 -8033.4902 7781.7129 c-8034.1914 7781.9297 -8034.9473 7782.145 -8035.0015 7781.0664 cb-8035.4858 7775.6113 m-8036.394 7775.9746 -8036.6206 7775.8809 -8036.8906 7776.2046 c-8037.1616 7776.5298 -8037.4834 7777.231 -8037.8623 7776.0977 c-8038.2402 7774.9634 -8037.7559 7773.7759 -8037.375 7773.9375 c-8036.999 7774.0991 -8036.6206 7774.7466 -8036.1895 7774.9634 c-8035.7578 7775.1802 -8034.9473 7775.3945 -8035.4858 7775.6113 cbUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 41)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8046.3281 7794 m-7965.3281 7794 L-7965.3281 7689 L-8046.3281 7689 L-8046.3281 7794 Lnuuu0 O0 0 0 1 k-8028.1338 7706.4258 m-8028.4014 7704.6626 -8029.4878 7703.291 -8030.8511 7703.397 c-8032.2134 7703.502 -8033.0342 7705.0234 -8033.0703 7706.8066 c-8033.0762 7707.0698 -8033.002 7708.2441 -8032.958 7708.4775 C-8032.9658 7708.582 -8032.9473 7708.6738 -8032.938 7708.7798 c-8032.8418 7710.0254 -8031.6846 7711.3599 -8030.269 7711.25 c-8028.853 7711.1406 -8027.8174 7709.8618 -8027.9648 7708.4727 c-8027.9722 7708.4072 -8028.0234 7707.626 -8028.0342 7707.5625 C-8028.0098 7707.2847 -8028.0874 7706.7256 -8028.1338 7706.4258 cf-8038.5918 7715.7334 m-8039.3223 7723.916 -8033.8286 7723.1191 v-8030.6958 7722.0186 -8031.769 7719.1206 v-8031.9702 7717.752 -8034.1118 7716.498 v-8034.4736 7716.25 -8035.0913 7715.1016 v-8035.457 7713.5977 -8036.8462 7713.2974 v-8038.4038 7713.251 -8038.5918 7715.7334 vf-8013.0918 7724.4966 mF-8012.4038 7722.3408 m-8013.1118 7721.1934 -8016.2129 7721.6279 Y-8017.1382 7721.689 -8017.707 7721.1113 Y-8020.167 7717.0918 -8023.3662 7717.8857 -8023.7358 7717.9937 C-8023.7378 7717.9863 L-8027.3262 7718.605 -8027.5942 7723.603 V-8027.8193 7724.3823 -8028.6626 7724.7695 V-8031.5967 7725.8618 -8031.6758 7727.208 V-8032.2271 7729.1152 -8029.9282 7729.7422 V-8028.0063 7730.2568 -8026.1162 7727.8945 V-8024.939 7726.6802 -8021.9038 7725.939 V-8021.9009 7725.9526 L-8018.687 7725.0454 -8016.9663 7725.5889 Y-8014.1802 7726.7681 -8012.7334 7725.4014 Y-8011.0103 7723.7559 -8012.4038 7722.3408 Yf-8026.311 7705.8794 m-8026.9126 7704.2002 -8026.6094 7702.4775 -8025.3599 7701.9233 c-8024.1118 7701.3672 -8022.666 7702.3169 -8021.7866 7703.8672 c-8021.6558 7704.0962 -8021.1631 7705.165 -8021.0913 7705.3906 C-8021.0342 7705.4785 -8021.0063 7705.5679 -8020.9639 7705.667 c-8020.457 7706.8086 -8020.8398 7708.5303 -8022.1382 7709.1074 c-8023.437 7709.6855 -8024.9551 7709.0527 -8025.4858 7707.7617 c-8025.5103 7707.7002 -8025.835 7706.9878 -8025.8574 7706.9263 C-8026.0103 7706.6958 -8026.209 7706.166 -8026.311 7705.8794 cf-8012.041 7708.9312 m-8007.5078 7715.7822 -8012.7183 7717.6943 v-8015.999 7718.2168 -8016.4302 7715.1567 v-8016.9063 7713.856 -8015.6177 7711.7354 v-8015.418 7711.3447 -8015.4214 7710.04 v-8015.8135 7708.5449 -8014.7358 7707.6182 v-8013.3862 7706.8359 -8012.041 7708.9312 vfUu-7987.063 7758.1074 m-7986.6958 7756.3623 -7987.2319 7754.6958 -7988.5454 7754.3169 c-7989.8599 7753.9375 -7991.1626 7755.0752 -7991.8218 7756.7329 c-7991.918 7756.9775 -7992.2598 7758.1025 -7992.3022 7758.3369 C-7992.3457 7758.4326 -7992.3599 7758.5249 -7992.3906 7758.6279 c-7992.7358 7759.8271 -7992.1206 7761.481 -7990.7559 7761.875 c-7989.3906 7762.2695 -7987.9727 7761.437 -7987.625 7760.085 c-7987.6074 7760.021 -7987.3823 7759.2705 -7987.3706 7759.207 C-7987.249 7758.9551 -7987.126 7758.4058 -7987.063 7758.1074 cf-8000.5986 7762.6177 m-8004.1519 7770.0239 -7998.7271 7771.2065 v-7995.4082 7771.2754 -7995.397 7768.1846 v-7995.1055 7766.8311 -7996.6714 7764.9072 v-7996.9214 7764.5454 -7997.0977 7763.2534 v-7996.9126 7761.7183 -7998.1074 7760.9487 v-7999.5498 7760.3594 -8000.5986 7762.6177 vf-7979.793 7779.7695 mF-7978.3906 7777.9912 m-7978.6519 7776.6689 -7981.707 7775.9878 Y-7982.5977 7775.7202 -7982.9263 7774.979 Y-7983.8198 7770.3535 -7987.0942 7769.9746 -7987.4766 7769.9458 C-7987.4766 7769.939 L-7991.0542 7769.2593 -7993.0586 7773.8462 V-7993.543 7774.4961 -7994.4688 7774.5625 V-7997.6001 7774.5562 -7998.145 7775.7886 V-7999.3311 7777.3809 -7997.3994 7778.7759 V-7995.7798 7779.9312 -7993.1807 7778.3818 V-7991.6519 7777.6582 -7988.5498 7778.0298 V-7988.5503 7778.042 L-7985.2241 7778.3218 -7983.8042 7779.4326 Y-7981.6074 7781.5142 -7979.7734 7780.7432 Y-7977.583 7779.8057 -7978.3906 7777.9912 Yf-7985.165 7758.2354 m-7985.1406 7756.4512 -7984.2534 7754.9458 -7982.8882 7754.8633 c-7981.522 7754.7798 -7980.502 7756.1768 -7980.2222 7757.9385 c-7980.1816 7758.1978 -7980.0942 7759.3711 -7980.1055 7759.6094 C-7980.083 7759.7114 -7980.0898 7759.8042 -7980.083 7759.9121 c-7980.0078 7761.1592 -7980.9722 7762.6367 -7982.3906 7762.7217 c-7983.8086 7762.8066 -7985.0103 7761.6826 -7985.0518 7760.2871 c-7985.0542 7760.2217 -7985.1094 7759.4399 -7985.1074 7759.375 C-7985.1714 7759.105 -7985.1694 7758.54 -7985.165 7758.2354 cf-7973.3462 7765.5625 m-7971.5054 7773.5679 -7977.0542 7773.5303 v-7980.311 7772.8687 -7979.6431 7769.8511 v-7979.6313 7768.4673 -7977.6807 7766.9326 v-7977.355 7766.6377 -7976.9014 7765.415 v-7976.7446 7763.876 -7975.4102 7763.3882 v-7973.873 7763.1279 -7973.3462 7765.5625 vfUU1 Ap-8046.3281 7794 m-8046.3281 7689 L-7965.3281 7689 L-7965.3281 7794 L-8046.3281 7794 LnUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 42)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-8019.7886 7767.085 m-8047.3281 7767.085 L-8047.3281 7794.624 L-8019.7886 7794.624 L-8019.7886 7767.085 Ln0 O0 0.55 1 0.12 k-8034.0874 7785.3623 m-8034.0874 7795 L-8032.9614 7795 L-8032.9614 7785.3623 L-8034.0874 7785.3623 Lf0 0.55 1 0.3 k-8037.751 7780.876 m-8036.6367 7779.1553 -8033.209 7777.457 -8028.8242 7777.457 c-8024.4434 7777.457 -8020.9414 7779.1064 -8019.8994 7780.874 C-8019.8994 7780.874 L-8020.9414 7782.6006 -8024.4434 7784.2974 -8028.8242 7784.2974 c-8033.2026 7784.2974 -8036.6519 7782.5615 -8037.751 7780.876 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 45)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8047.3281 7751.918 m-8047.3281 7795 L-7960.5498 7795 L-7960.5498 7751.918 L-8047.3281 7751.918 Lnuu0 O0 0 0 1 k-7987.5498 7781.2358 m-7987.5498 7789.0742 L-7975.5498 7782.145 L-7963.5498 7775.2168 L-7975.5498 7768.2886 L-7987.5498 7761.3618 L-7987.5498 7769.4824 L-8046.2622 7755.7168 L-8033.3154 7774.8022 L-8047.3281 7795 L-7987.5498 7781.2358 Lf0 1 1 0.1 k0 R0 0 0 1 K-7985.5498 7778.2358 m-7985.5498 7786.0742 L-7973.5498 7779.145 L-7961.5498 7772.2168 L-7973.5498 7765.2886 L-7985.5498 7758.3618 L-7985.5498 7766.4824 L-8044.2622 7752.7168 L-8029.603 7772.3594 L-8044.2622 7792 L-7985.5498 7778.2358 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 5)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7888.7271 7795 m-7888.7271 7781.4199 L-8047.3281 7781.4199 L-8047.3281 7795 L-7888.7271 7795 Lnuu0 O0.285 0.228 0.171 0 k-7903.4063 7793.4849 m-7903.3706 7794.6895 L-7889.8374 7795.5176 -7889.1694 7794.2822 v-7889.0718 7794.1016 -7888.9746 7793.7153 -7888.8887 7793.1934 C-7890.9121 7793.8242 -7900.6182 7793.5713 -7903.4063 7793.4849 Cf0.44 0.352 0.264 0 k-7903.7334 7782.0234 m-7903.6982 7783.2671 L-7900.8193 7783.0488 -7890.519 7782.3169 -7888.8706 7782.8657 C-7889.0303 7782.2192 -7889.248 7781.7646 -7889.5322 7781.6152 c-7891.1582 7780.7656 -7903.7334 7782.0234 Yf0.145 0.116 0.087 0 k-7903.6982 7783.2671 m-7903.4063 7793.4849 L-7900.6182 7793.5713 -7890.9121 7793.8242 -7888.8887 7793.1934 C-7888.479 7790.7778 -7888.2534 7785.3599 -7888.8706 7782.8657 C-7890.519 7782.3169 -7900.8193 7783.0488 -7903.6982 7783.2671 CfUu0.155 0.124 0.093 0 k-7929.2646 7787.2734 m-7928.2246 7787.6558 L-7909.3999 7783.1465 L-7909.8086 7782.3145 L-7928.6914 7784.7246 L-7929.5791 7785.0054 L-7929.978 7784.8936 -7930.521 7784.8242 V-7929.937 7785.2378 -7929.4702 7786.1406 -7929.2646 7787.2734 Cfu0.085 0.068 0.051 0 k-7934.127 7791.666 m-7934.9258 7791.7217 -7932.0767 7791.6641 Y-7932.6758 7791.0176 -7933.0986 7789.8198 -7933.1382 7788.4375 c-7933.145 7788.2246 -7933.1382 7788.0176 -7933.127 7787.8135 C-7933.3687 7787.707 -7933.4194 7787.7734 -7933.957 7787.5649 C-7933.3281 7791.6113 -7934.127 7791.666 vf0.305 0.244 0.183 0 k-7932.6719 7784.8672 m-7932.8799 7784.8105 -7932.8218 7786.9302 Y-7931.8066 7787.7583 L-7930.1631 7786.9434 L-7929.2646 7787.2734 L-7929.4702 7786.1406 -7929.937 7785.2378 -7930.521 7784.8242 C-7930.937 7784.771 -7932.2017 7784.7998 -7932.6719 7784.8672 CfU0.115 0.092 0.069 0 k-7929.2646 7787.2734 m-7930.1631 7786.9434 L-7931.8066 7787.7583 L-7932.8218 7786.9302 L-7933.1206 7787.708 -7933.127 7787.8135 V-7931.8418 7788.3794 -7930.5103 7788.7402 -7929.167 7788.9258 C-7929.1177 7788.7271 -7929.1118 7788.543 -7929.1177 7788.3369 c-7929.1274 7787.9722 -7929.1494 7787.6182 -7929.2646 7787.2734 Cf0.41 0.328 0.246 0 k-7909.7793 7783.397 m-7911.7046 7784.6426 -7920.7134 7790.0986 -7929.167 7788.9258 C-7929.231 7790.0928 -7929.5762 7791.0913 -7930.0776 7791.6631 C-7929.5166 7791.6626 L-7909.0679 7794.7559 L-7909.3638 7784.4258 L-7909.3999 7783.1465 L-7909.5322 7783.2378 -7909.7793 7783.397 vf0.395 0.316 0.237 0 k-7933.1382 7788.4375 m-7933.0986 7789.8198 -7932.6758 7791.0176 -7932.0767 7791.6641 C-7930.0078 7791.6631 L-7929.5054 7791.0913 -7929.1494 7790.0713 -7929.167 7788.9258 C-7930.5103 7788.7402 -7931.8418 7788.3794 -7933.127 7787.8135 C-7933.1382 7788.0176 -7933.145 7788.2246 -7933.1382 7788.4375 cfUu0 0 0 0.11 k-7903.5918 7782.2017 m-7902.5679 7782.0352 L-7903.5918 7782.2017 L-7903.5918 7782.2017 Lf0 0 0 0.34 k-7909.8086 7782.3145 m-7909.3999 7783.1465 L-7907.999 7782.918 L-7906.8511 7782.731 L-7905.0034 7782.4302 L-7903.5918 7782.2017 L-7902.5679 7782.0352 L-7902.623 7781.7168 -7902.6943 7781.498 -7902.793 7781.4199 C-7909.8086 7782.3145 Lf0 0 0 0.32 k-7908.1318 7787.207 m-7908.3687 7794.8618 L-7903.042 7795 L-7902.0542 7791.5142 -7902.5098 7787.1543 V-7908.1318 7787.207 LfU0.025 0.02 0.015 0 k-7901.6494 7784.3848 m-7898.7007 7784.9199 -7895.5679 7785.1602 -7892.6431 7784.3618 c-7892.6138 7784.3496 -7892.603 7784.3184 -7892.6143 7784.2969 c-7892.6162 7784.2656 -7892.647 7784.2559 -7892.6694 7784.2559 c-7895.5698 7785.0649 -7898.7026 7784.8242 -7901.6318 7784.2783 c-7901.6538 7784.2793 -7901.6846 7784.291 -7901.6943 7784.3223 c-7901.6934 7784.3442 -7901.6826 7784.375 -7901.6494 7784.3848 c-7901.6494 7784.3848 lf-7900.165 7783.3071 m-7900.0566 7783.3794 -7899.959 7783.4946 -7899.8511 7783.502 c-7896.1162 7783.832 -7892.4902 7783.7817 -7888.8022 7783.6641 c-7888.7798 7783.6641 -7888.749 7783.6426 -7888.749 7783.6206 c-7888.749 7783.5879 -7888.7822 7783.5679 -7888.8042 7783.5679 c-7891.6494 7783.6816 -7894.4678 7783.6992 -7897.3311 7783.5352 c-7898.2607 7783.4766 -7899.2358 7783.7402 -7900.1055 7783.2207 c-7900.127 7783.2114 -7900.1582 7783.2114 -7900.1782 7783.2334 c-7900.1895 7783.2559 -7900.187 7783.2871 -7900.165 7783.3071 c-7900.165 7783.3071 lf-7895.7007 7785.3672 m-7893.8374 7786.6802 -7891.6294 7787.374 -7889.4282 7787.8862 c-7889.395 7787.897 -7889.375 7787.8848 -7889.3638 7787.8535 c-7889.355 7787.8198 -7889.377 7787.8008 -7889.3975 7787.79 c-7891.5898 7787.2656 -7893.7866 7786.603 -7895.6382 7785.2798 c-7895.6714 7785.2598 -7895.7026 7785.271 -7895.7119 7785.293 c-7895.7334 7785.3145 -7895.7222 7785.3457 -7895.7007 7785.3672 c-7895.7007 7785.3672 lf-7901.2598 7792.0566 m-7899.0566 7792.5703 -7896.8574 7793.0303 -7894.6074 7793.2754 c-7894.5874 7793.2847 -7894.5566 7793.2642 -7894.5566 7793.2422 c-7894.5454 7793.209 -7894.5679 7793.1777 -7894.6006 7793.1782 c-7896.8398 7792.8809 -7899.0586 7792.5176 -7901.2402 7791.9502 c-7901.2622 7791.9512 -7901.2954 7791.9634 -7901.3042 7791.9946 c-7901.3022 7792.0161 -7901.293 7792.0479 -7901.2598 7792.0566 c-7901.2598 7792.0566 lf-7900.7666 7791.3599 m-7898.6738 7792.1978 -7896.4287 7791.9297 -7894.23 7791.9634 c-7894.1982 7791.9609 -7894.1777 7791.939 -7894.1782 7791.9082 c-7894.1802 7791.875 -7894.2007 7791.855 -7894.2222 7791.855 c-7896.4209 7791.8442 -7898.665 7792.0991 -7900.749 7791.2529 c-7900.771 7791.2534 -7900.8022 7791.2656 -7900.811 7791.2969 c-7900.811 7791.3184 -7900.7998 7791.3506 -7900.7666 7791.3599 c-7900.7666 7791.3599 lf-7900.0342 7792.7046 m-7898.7114 7792.752 -7897.478 7792.5474 -7896.1553 7792.209 c-7895.687 7792.0991 -7895.248 7792.2266 -7894.7886 7792.2129 c-7894.2246 7792.1978 l-7894.2017 7792.1958 -7894.1914 7792.1855 -7894.1807 7792.1738 c-7894.1616 7792.1519 -7894.1719 7792.1206 -7894.1934 7792.0991 c-7894.3906 7791.9458 l-7894.4014 7791.9458 -7894.4126 7791.9351 -7894.4238 7791.9351 c-7894.8271 7791.9473 l-7896.2822 7792.1914 -7897.7847 7792.6719 -7899.2202 7792.0742 c-7899.2534 7792.0649 -7899.2847 7792.0854 -7899.2954 7792.1074 c-7899.2954 7792.1392 -7899.2822 7792.1602 -7899.2607 7792.1714 c-7897.9746 7792.6992 -7896.499 7792.4751 -7895.2095 7792.0542 c-7894.4194 7792.043 L-7894.4521 7792.0337 L-7894.2559 7792.187 L-7894.2266 7792.0898 L-7894.791 7792.1064 l-7895.2598 7792.1406 -7895.7119 7791.9834 -7896.167 7792.103 c-7897.4814 7792.4609 -7898.7246 7792.625 -7900.0376 7792.5986 c-7900.0698 7792.6001 -7900.0918 7792.6206 -7900.0898 7792.6538 c-7900.0898 7792.6855 -7900.0679 7792.7065 -7900.0342 7792.7046 c-7900.0342 7792.7046 lf-7900.8994 7793.061 m-7898.1982 7794.2207 -7895.23 7793.5703 -7892.4561 7793.1816 c-7892.1104 7793.2886 l-7892.0898 7793.2993 -7892.0698 7793.2871 -7892.0479 7793.2656 c-7892.0376 7793.2441 -7892.0498 7793.2129 -7892.0698 7793.2026 c-7892.4082 7793.0098 l-7895.103 7792.3926 -7897.8662 7792.7817 -7900.5986 7792.7856 c-7900.6294 7792.7871 -7900.6514 7792.8086 -7900.6494 7792.8398 c-7900.647 7792.8721 -7900.626 7792.8926 -7900.5962 7792.8926 c-7898.0015 7792.9351 -7895.3574 7792.4434 -7892.7998 7793.0742 c-7892.123 7793.2886 L-7892.0806 7793.1914 L-7892.4678 7793.0854 l-7895.2334 7793.4424 -7898.1694 7794.1343 -7900.8594 7792.9746 c-7900.8818 7792.9648 -7900.9126 7792.9648 -7900.9238 7792.998 c-7900.9326 7793.019 -7900.9326 7793.0513 -7900.8994 7793.061 c-7900.8994 7793.061 lf-7898.0166 7786.3945 m-7896.7222 7786.9009 -7895.311 7786.6465 -7894.0078 7786.3442 c-7893.9746 7786.3418 -7893.9648 7786.3198 -7893.9658 7786.2886 c-7893.978 7786.2568 -7893.999 7786.2466 -7894.0303 7786.248 c-7895.3257 7786.5303 -7896.7046 7786.8154 -7897.978 7786.2969 c-7898.0103 7786.2871 -7898.042 7786.2993 -7898.0518 7786.3311 c-7898.0498 7786.353 -7898.0391 7786.3848 -7898.0166 7786.3945 c-7898.0166 7786.3945 lf-7898.4678 7788.2207 m-7896.5542 7788.6895 -7894.6426 7789.103 -7892.6826 7789.3242 c-7892.6519 7789.334 -7892.6294 7789.313 -7892.6206 7789.2798 c-7892.623 7789.2598 -7892.6431 7789.229 -7892.665 7789.229 c-7894.623 7789.0078 -7896.5366 7788.582 -7898.4482 7788.1138 c-7898.4702 7788.1152 -7898.5015 7788.126 -7898.5103 7788.1582 c-7898.5103 7788.1802 -7898.499 7788.2114 -7898.4678 7788.2207 c-7898.4678 7788.2207 lf-7899.2607 7790.6353 m-7896.8262 7791.4609 -7894.1919 7791.0542 -7891.6738 7791.0879 c-7891.6406 7791.0879 -7891.6206 7791.0664 -7891.6206 7791.0337 c-7891.623 7791.0122 -7891.6431 7790.9922 -7891.6758 7790.9922 c-7894.1846 7790.916 -7896.8086 7791.3848 -7899.2222 7790.5264 c-7899.2559 7790.5273 -7899.2866 7790.5391 -7899.2959 7790.561 c-7899.2954 7790.5918 -7899.2842 7790.624 -7899.2607 7790.6353 c-7899.2607 7790.6353 lf-7894.3818 7791.8496 m-7892.9858 7792.5449 -7891.3774 7792.4033 -7889.8618 7792.4673 c-7889.8296 7792.4648 -7889.8105 7792.4434 -7889.8105 7792.4121 c-7889.811 7792.3906 -7889.833 7792.3594 -7889.8638 7792.3594 c-7891.3418 7792.2207 -7892.9766 7792.5234 -7894.3311 7791.7617 c-7894.3638 7791.7529 -7894.395 7791.7642 -7894.4063 7791.7866 c-7894.415 7791.8081 -7894.4038 7791.8398 -7894.3818 7791.8496 c-7894.3818 7791.8496 lf-7893.6694 7788.4248 m-7892.7202 7788.3975 -7891.7617 7788.3706 -7890.811 7788.3423 c-7890.7798 7788.3418 -7890.7583 7788.3198 -7890.7617 7788.2881 c-7890.7617 7788.2559 -7890.7822 7788.2354 -7890.8154 7788.2358 c-7891.7646 7788.2642 -7892.7246 7788.291 -7893.6738 7788.3184 c-7893.7046 7788.3184 -7893.7246 7788.3418 -7893.7246 7788.373 c-7893.7246 7788.4038 -7893.7017 7788.4258 -7893.6694 7788.4248 c-7893.6694 7788.4248 lf-7891.4863 7786.0361 m-7891.0166 7786.0649 -7890.5366 7786.0718 -7890.0654 7786.0918 c-7890.0449 7786.0913 -7890.0127 7786.0688 -7890.0142 7786.0366 c-7890.0142 7786.0039 -7890.0376 7785.9839 -7890.0698 7785.9839 c-7890.5391 7785.9873 -7891.0098 7785.9375 -7891.479 7785.939 c-7891.5103 7785.9297 -7891.5313 7785.9512 -7891.541 7785.9839 c-7891.541 7786.0161 -7891.519 7786.0366 -7891.4863 7786.0361 c-7891.4863 7786.0361 lf-7899.2974 7788.2344 m-7898.897 7788.5103 -7898.4526 7788.6802 -7897.9727 7788.751 c-7897.939 7788.7607 -7897.9194 7788.7383 -7897.9082 7788.7168 c-7897.8975 7788.6855 -7897.9199 7788.6543 -7897.9434 7788.6543 c-7898.4126 7788.5718 -7898.8447 7788.4023 -7899.249 7788.147 c-7899.2798 7788.1377 -7899.313 7788.1382 -7899.3223 7788.1714 c-7899.3311 7788.1934 -7899.3198 7788.2246 -7899.2974 7788.2344 c-7899.2974 7788.2344 lf-7900.5186 7794.085 m-7898.062 7794.5273 -7895.626 7795.001 -7893.127 7794.7266 c-7893.1055 7794.7266 -7893.085 7794.7041 -7893.0854 7794.6719 c-7893.0854 7794.6406 -7893.1074 7794.6191 -7893.1294 7794.6191 c-7895.6182 7794.873 -7898.062 7794.4849 -7900.499 7793.9775 c-7900.521 7793.9785 -7900.5537 7793.9902 -7900.562 7794.0215 c-7900.562 7794.043 -7900.5498 7794.0752 -7900.5186 7794.085 c-7900.5186 7794.085 lf0.195 0.156 0.117 0 k-7900.4937 7782.645 m-7898.125 7782.2671 -7895.7334 7782.3481 -7893.3574 7782.5898 c-7893.3257 7782.5879 -7893.3042 7782.5664 -7893.3042 7782.5352 c-7893.3066 7782.5137 -7893.3281 7782.4824 -7893.3486 7782.4824 c-7895.7358 7782.2422 -7898.1182 7782.1602 -7900.4966 7782.5391 c-7900.5303 7782.5391 -7900.5498 7782.561 -7900.5498 7782.5938 c-7900.5479 7782.625 -7900.5273 7782.6465 -7900.4937 7782.645 c-7900.4937 7782.645 lf0.335 0.268 0.201 0 k-7899.7622 7782.1113 m-7897.2559 7782.1152 -7894.7422 7782.2778 -7892.2456 7781.897 c-7892.2134 7781.8945 -7892.1919 7781.873 -7892.1934 7781.8418 c-7892.1953 7781.8086 -7892.2178 7781.7886 -7892.249 7781.7886 c-7894.7456 7782.1694 -7897.2578 7782.0298 -7899.7646 7782.0054 c-7899.7871 7782.0054 -7899.8086 7782.0273 -7899.8066 7782.0591 c-7899.8066 7782.0918 -7899.7847 7782.1118 -7899.7622 7782.1113 c-7899.7622 7782.1113 lf0.205 0.164 0.123 0 k-7901.3042 7782.3262 m-7899.8311 7782.668 -7898.335 7782.4023 -7896.8662 7782.2207 c-7896.835 7782.2207 -7896.8154 7782.1978 -7896.8262 7782.166 c-7896.8271 7782.1343 -7896.8486 7782.1138 -7896.8818 7782.125 c-7898.3374 7782.2842 -7899.8242 7782.583 -7901.2754 7782.2192 c-7901.3066 7782.2207 -7901.3374 7782.2319 -7901.3374 7782.2642 c-7901.3462 7782.2847 -7901.3257 7782.3169 -7901.3042 7782.3262 c-7901.3042 7782.3262 lf-7894.6816 7781.7954 m-7893.5254 7781.9214 -7892.355 7781.8145 -7891.2202 7781.5898 c-7891.1982 7781.5786 -7891.1782 7781.5566 -7891.1895 7781.5249 c-7891.1895 7781.5034 -7891.2222 7781.4824 -7891.2441 7781.4946 c-7892.3774 7781.7402 -7893.519 7781.7935 -7894.6738 7781.689 c-7894.707 7781.6895 -7894.7266 7781.7114 -7894.7358 7781.7329 c-7894.7358 7781.7646 -7894.7134 7781.7856 -7894.6816 7781.7954 c-7894.6816 7781.7954 lf0.335 0.268 0.201 0 k-7901.5962 7784.4473 m-7900.249 7785.189 -7898.6343 7784.5977 -7897.1826 7784.6416 c-7897.1494 7784.6406 -7897.1294 7784.6191 -7897.1294 7784.5854 c-7897.1318 7784.5654 -7897.1538 7784.5449 -7897.1846 7784.5449 c-7898.6162 7784.4902 -7900.21 7785.0801 -7901.5439 7784.3506 c-7901.5654 7784.3398 -7901.5967 7784.3521 -7901.6182 7784.374 c-7901.6289 7784.395 -7901.6162 7784.4282 -7901.5962 7784.4473 c-7901.5962 7784.4473 lf-7900.2222 7786.5649 m-7897.999 7787.0449 -7895.7178 7786.6162 -7893.478 7786.5625 c-7893.4458 7786.5615 -7893.4258 7786.5391 -7893.4258 7786.5078 c-7893.4282 7786.4863 -7893.459 7786.4673 -7893.479 7786.4673 c-7895.7114 7786.4775 -7897.979 7786.981 -7900.2026 7786.457 c-7900.2246 7786.457 -7900.2559 7786.4688 -7900.2646 7786.502 c-7900.2646 7786.5225 -7900.2534 7786.5542 -7900.2222 7786.5649 c-7900.2222 7786.5649 lf-7894.355 7783.1406 m-7892.6768 7783.9688 -7890.8262 7784.502 -7888.9302 7784.3618 c-7888.8994 7784.3618 -7888.8794 7784.3394 -7888.8799 7784.3066 c-7888.8799 7784.2754 -7888.9014 7784.2534 -7888.9351 7784.2559 c-7890.8086 7784.416 -7892.647 7783.8608 -7894.3154 7783.0542 c-7894.335 7783.0449 -7894.3687 7783.0449 -7894.3774 7783.0786 c-7894.3887 7783.0991 -7894.3887 7783.1313 -7894.355 7783.1406 c-7894.355 7783.1406 lfu0.5 0.85 1 0.45 k-8047.3281 7789.9082 m-8047.353 7790.4878 -8046.894 7791.187 -8045.4946 7791.9902 C-8045.1802 7792.0034 -8043.7222 7792.0234 -8041.417 7792.0488 C-8041.417 7789.8223 L-8043.4658 7789.8457 -8045.4458 7789.8862 -8047.3281 7789.9082 Cf-8046.8369 7788.9688 m-8041.417 7788.8447 L-8041.417 7787.8145 L-8044.9722 7787.959 L-8046.1426 7788.3306 -8046.8369 7788.9688 Vf0.5 0.85 1 0.32 k-8041.417 7788.8257 m-8046.8022 7788.9434 L-8047.0977 7789.2144 -8047.313 7789.5566 -8047.3281 7789.9282 C-8045.4458 7789.9063 -8043.4658 7789.8848 -8041.417 7789.8618 C-8041.417 7788.8257 Lf0.5 0.85 1 0.45 k-7936.478 7788.6177 m-8014.686 7789.541 -8041.4351 7789.8418 V-8041.4351 7792.0488 L-8025.1426 7792.2319 -7966.3174 7792.707 Y-7932.0767 7791.6641 L-7932.7847 7788.5679 L-7936.478 7788.6177 Lf0.5 0.85 1 0.12 k-8041.4351 7787.8145 m-8041.4351 7788.8447 L-7932.7534 7787 L-7932.7114 7784.8633 L-7965.9834 7784.7129 L-8041.4351 7787.8145 Lfu0.065 0.052 0.039 0 k-7909.3999 7783.1465 m-7909.3638 7784.4258 L-7909.623 7783.1167 L-7928.2246 7787.6558 L-7929.2646 7787.2734 L-7929.207 7787.6055 -7929.167 7787.957 -7929.1582 7788.3223 c-7929.1519 7788.5278 -7929.1558 7788.729 -7929.167 7788.9258 C-7920.7134 7790.0986 -7911.291 7785.6719 -7909.3638 7784.4258 C-7909.0679 7794.7559 L-7908.3687 7794.8618 L-7908.1318 7787.207 L-7902.5098 7787.1543 L-7902.4175 7785.0137 -7902.3994 7783.0215 -7902.5679 7782.0352 C-7909.3999 7783.1465 Lf0.4 0.7 1 0 k-7932.7847 7788.5879 m-7932.7534 7786.981 L-8041.4351 7788.8257 L-8041.4351 7789.8618 L-8014.686 7789.561 -7932.7847 7788.5879 YfUU0.025 0.02 0.015 0 k-7897.062 7791.0298 m-7897.062 7791.0625 -7897.041 7791.082 -7897.0078 7791.082 c-7893.999 7791.1138 -7891.749 7790.9458 -7888.7422 7790.8594 C-7888.7358 7790.7656 L-7891.6538 7790.8706 -7894.0879 7791.0078 -7897.0122 7790.9746 C-7897.0449 7790.9766 -7897.063 7790.998 -7897.062 7791.0298 Cf-7888.7271 7790.7656 m-7888.7358 7790.7441 L-7888.7358 7790.7656 L-7888.7334 7790.7656 -7888.731 7790.7656 -7888.7271 7790.7656 Cf-7892.7759 7789.4238 m-7893.7734 7789.292 -7894.667 7789.7656 -7895.5391 7790.1978 C-7895.5718 7790.208 -7895.5806 7790.2402 -7895.5698 7790.271 C-7895.5586 7790.293 -7895.5254 7790.3022 -7895.5054 7790.291 c-7894.6538 7789.8306 -7893.7583 7789.4199 -7892.7954 7789.519 c-7891.4351 7789.6626 -7890.231 7790.375 -7888.853 7790.4526 C-7888.7734 7790.3594 L-7890.3682 7790.2656 -7891.1919 7789.623 -7892.7759 7789.4238 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 50)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8046.3281 7794 m-7919.2046 7794 L-7919.2046 7746.415 L-8046.3281 7746.415 L-8046.3281 7794 Lnu*u0 O0.9529 0.949 0.1961 0.0745 k-8020.1206 7778.417 m-8020.1514 7778.2671 L-8022.313 7772.3638 -8023.271 7769.6377 -8023.603 7768.2886 c-8023.6934 7768.2886 L-8024.0234 7769.6074 -8025.103 7772.335 -8027.2954 7778.2671 c-8027.3242 7778.417 L-8020.1206 7778.417 lf1 D-8030.4458 7786.9678 m-8031.9473 7790.5366 -8032.7271 7792.709 -8030.4458 7792.917 c-8030.4458 7793.9678 L-8033.0273 7793.9375 -8035.9082 7793.917 -8038.6694 7793.917 c-8042.3926 7793.917 -8044.855 7793.9375 -8046.3281 7793.9678 c-8046.3281 7792.917 L-8044.4346 7792.709 -8043.3818 7790.5674 -8035.8794 7773.5034 c-8024.0234 7746.415 L-8022.1914 7746.415 L-8010.4858 7773.5034 L-8003.1318 7790.5078 -8002.0518 7792.709 -8000.2158 7792.917 c-8000.2158 7793.9678 L-8001.8418 7793.9375 -8004.2441 7793.917 -8007.9038 7793.917 c-8010.877 7793.917 -8013.9966 7793.9375 -8017.0303 7793.9678 c-8017.0303 7792.917 L-8014.8086 7792.709 -8015.6494 7790.5078 -8017.0898 7786.9678 C-8030.4458 7786.9678 lf*U*u0 D-7975.4038 7762.0806 m-7975.4038 7758.4722 -7977.6816 7756.0942 -7981.457 7756.0942 c-7982.5654 7756.0942 -7983.4038 7756.2158 -7983.855 7756.2446 c-7983.855 7768.5479 L-7983.1953 7768.6079 -7982.5361 7768.6079 -7982.0566 7768.6079 c-7980.5278 7768.6079 -7979.0303 7768.127 -7978.0122 7767.4058 c-7976.7222 7766.5327 -7975.4038 7764.7881 -7975.4038 7762.1416 C-7975.4038 7762.0806 lf1 D-7994.4082 7766.3926 m-7994.4082 7750.645 -7994.4082 7748.4287 -7996.8696 7748.2783 c-7996.8696 7747.3184 L-7995.3696 7747.2593 -7992.645 7747.1992 -7989.894 7747.1689 c-7987.9814 7747.1089 -7984.7222 7747.0186 -7982.4751 7746.9775 c-7978.9097 7746.9775 -7975.9126 7747.4258 -7973.333 7748.2622 c-7968.6807 7749.8481 -7964.2974 7753.853 -7964.2974 7761.6602 c-7964.2974 7766.7432 -7966.729 7770.3193 -7968.8311 7772.061 c-7969.9102 7773.0215 -7971.1406 7773.832 -7972.1025 7774.313 c-7972.1025 7774.4634 L-7969.8511 7777.4912 -7967.9302 7780.0625 -7961.7183 7788.6426 c-7959.8271 7791.0649 -7958.2378 7792.7383 -7957.0679 7792.9775 c-7957.0679 7794 L-7958.9878 7794 -7961.3281 7793.8848 -7963.457 7793.8848 c-7965.6782 7793.8848 -7967.1802 7794 -7968.77 7794 c-7970.001 7794 -7971.0518 7793.9409 -7971.8311 7793.2729 c-7975.3423 7787.8481 -7979.2402 7781.7559 -7982.4458 7776.7134 c-7982.835 7776.7134 -7983.2847 7776.7134 -7983.855 7776.7134 c-7983.855 7779.2847 L-7983.855 7790.5264 -7983.7646 7792.769 -7981.5166 7792.9775 c-7981.5166 7793.9697 L-7982.9551 7793.9409 -7986.2471 7793.915 -7989.0273 7793.915 c-7992.2559 7793.915 -7995.2202 7793.9409 -7996.8398 7793.9697 c-7996.8398 7792.9775 L-7994.3794 7792.769 -7994.4082 7790.5264 -7994.4082 7773.5918 C-7994.4082 7766.3926 lf*U*u0 D-7943.7842 7773.5928 m-7943.7842 7790.4946 -7943.7842 7792.6479 -7946.6113 7792.9775 C-7946.6113 7793.9697 l-7944.7158 7793.9409 -7941.3818 7793.915 -7938.1094 7793.915 c-7934.957 7793.915 -7931.897 7793.9409 -7929.6162 7793.9697 C-7929.6162 7792.9775 l-7932.5854 7792.9775 -7932.6162 7790.5249 -7932.6162 7773.5928 C-7932.6162 7756.1514 L-7925.147 7756.1514 l-7922.3262 7756.1514 -7920.8574 7756.96 -7920.2271 7759.2622 C-7919.2354 7759.2622 l-7919.2354 7754.4697 -7919.2046 7750.415 -7919.2046 7747.1714 c-7923.6758 7747.2017 -7929.0762 7747.231 -7934.3882 7747.231 C-7942.0718 7747.231 l-7946.8818 7747.231 -7952.3242 7747.2017 -7957.2886 7747.1714 c-7957.2886 7750.3848 -7957.2598 7754.4697 -7957.2598 7759.2622 C-7956.2354 7759.2622 l-7955.6934 7757.1094 -7954.0986 7756.1514 -7951.271 7756.1514 C-7943.7842 7756.1514 l-7943.7842 7773.5928 Lf*UUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 6)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8047.0776 7771 m-8047.0776 7795 L-8037.0776 7795 L-8037.0776 7771 L-8047.0776 7771 Ln0 Ap0 O1 g-8037.0776 7773 m-8037.3975 7773 -8037.7134 7773.0186 -8038.0254 7773.0479 c-8039.915 7773.2256 -8041.647 7773.9346 -8043.083 7775.0176 c-8044.5806 7776.1465 -8045.7471 7777.6816 -8046.4214 7779.4639 c-8046.8398 7780.5649 -8047.0776 7781.7529 -8047.0776 7783 c-8047.0776 7784.8623 -8046.5601 7786.6001 -8045.6738 7788.0918 c-8043.9302 7791.0273 -8040.7378 7793 -8037.0776 7793 C-8037.0776 7773 Lf0 R0 G1 J 1 j 0.5 w-8037.0776 7792.6816 m-8040.1074 7791.7256 -8042.9351 7790.0674 -8045.6738 7788.0918 CS-8037.0776 7787.0488 m-8040.2271 7784.6431 -8043.2847 7781.9126 -8046.4214 7779.4639 CS-8043.083 7775.0176 m-8041.0186 7776.1089 -8039.0298 7777.4673 -8037.0776 7778.957 CS-8038.0254 7773.0479 m-8037.709 7773.1313 -8037.3906 7773.2144 -8037.0776 7773.3145 CS-8043.083 7775.0176 m-8041.647 7773.9351 -8039.915 7773.2256 -8038.0254 7773.0479 CS-8046.4214 7779.4639 m-8046.8398 7780.5649 -8047.0776 7781.7529 -8047.0776 7783 c-8047.0776 7784.8623 -8046.5586 7786.6001 -8045.6738 7788.0918 CS-8037.0776 7773 m-8037.3975 7773 -8037.7134 7773.0186 -8038.0254 7773.0479 CS-8043.083 7775.0176 m-8044.5806 7776.1465 -8045.7471 7777.6816 -8046.4214 7779.4639 CS-8045.6738 7788.0918 m-8043.9302 7791.0273 -8040.7378 7793 -8037.0776 7793 CSU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 62)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8047.3281 7795 m-8047.3281 7756.7305 L-8009.0586 7756.7305 L-8009.0586 7795 L-8047.3281 7795 Ln0 O1 0.14 0.09 0 k-8009.0586 7777.9038 m-8009.0586 7769.3408 L-8047.3281 7769.3408 L-8047.3281 7777.9038 L-8009.0586 7777.9038 Lf-8009.0586 7781.0967 m-8009.0586 7780.4233 L-8047.3281 7780.4233 L-8047.3281 7781.0967 L-8009.0586 7781.0967 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 63)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8047.3281 7795 m-8047.3281 7756.7305 L-8009.0586 7756.7305 L-8009.0586 7795 L-8047.3281 7795 Ln0 O1 0.14 0.09 0 k-8009.0586 7773.8262 m-8009.0586 7782.3896 L-8021.6689 7782.3896 L-8021.6689 7795 L-8030.231 7795 L-8030.2334 7773.8262 L-8030.231 7773.8262 L-8030.231 7773.8257 L-8009.0586 7773.8262 Lf-8009.0586 7771.3071 m-8032.751 7771.3071 L-8032.751 7795 L-8033.4238 7795 L-8033.4258 7770.6328 L-8009.0586 7770.6328 L-8009.0586 7771.3071 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 64)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8047.3281 7794.999 m-8047.3281 7756.729 L-8009.0586 7756.729 L-8009.0586 7794.999 L-8047.3281 7794.999 Ln0 O1 0.14 0.09 0 k-8009.0586 7769.3394 m-8034.7178 7769.3394 L-8034.7178 7794.999 L-8026.1538 7795 L-8026.1538 7777.9033 L-8009.0586 7777.9033 L-8009.0586 7769.3394 Lf-8009.0586 7780.4214 m-8023.6362 7780.4214 L-8023.6362 7795 L-8022.9614 7795 L-8022.9614 7781.0962 L-8009.0586 7781.0962 L-8009.0586 7780.4214 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 65)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-8019.3906 7767.4609 m-8046.9302 7767.4609 L-8046.9302 7795 L-8019.3906 7795 L-8019.3906 7767.4609 Ln0 O0 0.55 1 0.12 k-8019.1694 7780.7002 m-8047.3281 7780.7002 L-8047.3281 7781.8257 L-8019.1694 7781.8257 L-8019.1694 7780.7002 Lfu0 0.55 1 0.3 k-8046.3086 7768.5215 m-8046.7378 7770.5254 -8045.5142 7774.1514 -8042.415 7777.251 c-8039.3154 7780.3496 -8035.6738 7781.6602 -8033.687 7781.1455 C-8033.687 7781.1455 L-8033.2026 7779.1895 -8034.479 7775.5122 -8037.5776 7772.4146 c-8040.6738 7769.3184 -8044.3398 7768.1064 -8046.3086 7768.5215 Cf0 0.39 0.7 0.12 k-8046.3086 7793.9912 m-8046.7378 7791.9878 -8045.5142 7788.3618 -8042.415 7785.2617 c-8039.3154 7782.1641 -8035.6738 7780.8535 -8033.687 7781.3672 C-8033.687 7781.3672 L-8033.2026 7783.3242 -8034.479 7787.001 -8037.5776 7790.0991 c-8040.6738 7793.1953 -8044.3398 7794.4063 -8046.3086 7793.9912 CfUu0 0.55 1 0.3 k-8032.5054 7793.9912 m-8032.9351 7791.9878 -8031.7114 7788.3618 -8028.6118 7785.2617 c-8025.5137 7782.1641 -8021.8706 7780.8535 -8019.8857 7781.3672 C-8019.8838 7781.3672 L-8019.3994 7783.3242 -8020.6768 7787.001 -8023.7754 7790.0991 c-8026.8706 7793.1953 -8030.5366 7794.4063 -8032.5054 7793.9912 Cf0 0.39 0.7 0.12 k-8032.5054 7768.5215 m-8032.9351 7770.5254 -8031.7114 7774.1514 -8028.6118 7777.251 c-8025.5137 7780.3496 -8021.8706 7781.6602 -8019.8857 7781.1455 C-8019.8838 7781.1455 L-8019.3994 7779.1895 -8020.6768 7775.5122 -8023.7754 7772.4146 c-8026.8706 7769.3184 -8030.5366 7768.1064 -8032.5054 7768.5215 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 67)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-8019.7886 7767.085 m-8047.3281 7767.085 L-8047.3281 7794.624 L-8019.7886 7794.624 L-8019.7886 7767.085 Ln0 O0 0.55 1 0.12 k-8034.0874 7785.3623 m-8034.0874 7795 L-8032.9614 7795 L-8032.9614 7785.3623 L-8034.0874 7785.3623 Lf0 0.55 1 0.3 k-8037.751 7780.876 m-8036.6367 7779.1553 -8033.209 7777.457 -8028.8242 7777.457 c-8024.4434 7777.457 -8020.9414 7779.1064 -8019.8994 7780.874 C-8019.8994 7780.874 L-8020.9414 7782.6006 -8024.4434 7784.2974 -8028.8242 7784.2974 c-8033.2026 7784.2974 -8036.6519 7782.5615 -8037.751 7780.876 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 69)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8019.7886 7767.4609 m-8047.3281 7767.4609 L-8047.3281 7795 L-8019.7886 7795 L-8019.7886 7767.4609 Ln0 O0 0.55 1 0.3 k-8037.751 7781.252 m-8036.6367 7779.5313 -8033.209 7777.833 -8028.8242 7777.833 c-8024.4434 7777.833 -8020.9414 7779.4824 -8019.8994 7781.25 C-8019.8994 7781.25 L-8020.9414 7782.9766 -8024.4434 7784.6738 -8028.8242 7784.6738 c-8033.2026 7784.6738 -8036.6519 7782.9375 -8037.751 7781.252 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 8)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8046.2798 7792.313 m-7939.123 7792.313 L-7939.123 7778.1855 L-8046.2798 7778.1855 L-8046.2798 7792.313 Lnu0 O0 0 0 1 k-8044.6113 7791.623 m-8045.1807 7794 -8045.146 7790.0039 V-8045.375 7786.8022 L-8045.9438 7784.4551 L-8045.7778 7782.123 L-8044.2778 7781.4551 -8027.6113 7780.123 V-8020.9438 7778.7886 -8011.9438 7778.7886 V-7946.7217 7779.4766 -7941.8193 7780.8848 v-7982.7158 7778.875 -7985.2959 7779.5122 v-7946.1846 7781.1602 -7943.1826 7782.4321 v-7981.1177 7780.5474 -7984.4946 7782.1777 v-7949.5767 7783.9102 -7945.3486 7785.5313 v-7952.0498 7784.8833 -7953.8398 7785.082 v-7950.7178 7785.5703 l-7955.7471 7785.502 l-7958.6494 7785.1289 l-7950.7798 7786.2422 -7950.231 7786.8086 v-7946.6431 7786.1313 -7960.8462 7786.3848 v-7994.4458 7782.4551 -8044.6113 7791.623 Vf/BBAccumRotation (5.805971) XT0 R0 0 0 0.5 K0.025 w-8046.2778 7781.123 m-8025.9946 7779.2954 -8006.2998 7778.2207 v-7963.479 7778.502 -7958.9014 7778.9009 v-7946.4902 7779.0313 -7939.123 7780.0273 vS/BBAccumRotation (5.805971) XT0 0 0 1 K-7984.165 7778.4082 m-7987.623 7778.0273 -8013.5889 7778.2793 Y-8023.9546 7778.1602 -8046.2778 7781.123 YS/BBAccumRotation (5.805971) XT-7983.3154 7781.6641 m-7952.689 7782.582 -7945.9878 7783.2319 vS/BBAccumRotation (5.805971) XT0 0 0 0.5 K-7991.9482 7786.2046 m-7956.6982 7787.6177 -7953.7334 7788.1406 vS/BBAccumRotation (5.805971) XTUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 83)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8046.3281 7793.9351 m-7832.729 7793.9351 L-7832.729 7786.1343 L-8046.3281 7786.1343 L-8046.3281 7793.9351 Ln0 O0 0 0 1 k-8046.3281 7790.0352 m-8036.3135 7792.5273 -8029.5142 7793.875 -8017.5278 7793.9351 c-8004.5454 7794 -7939.5278 7793.9351 y-7874.5098 7794 -7861.5278 7793.9351 v-7849.541 7793.875 -7842.7422 7792.5273 -7832.729 7790.0352 C-7842.7422 7787.543 -7849.541 7786.1953 -7861.5278 7786.1343 c-7874.5098 7786.0698 -7939.5278 7786.1343 y-8004.5454 7786.0698 -8017.5278 7786.1343 v-8029.5142 7786.1953 -8036.3135 7787.543 -8046.3281 7790.0352 CfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -(tternOnPath Brush Tool/ Rope /) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(10 pt Oval)(1 1 19 15 15 130 130 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(12 pt Oval )(1 7 17 45 45 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(20 pt Oval)(1 20 20 20 100 40 80 0 2 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(25 pt Round )(1 10 40 100 100 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(50 pt Flat)(1 40 60 0 0 44 44 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(6 pt Flat )(1 4 8 10 10 90 90 2 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Dog Tracks)(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Fall Leaf)(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -(1 1 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Ladybug)(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -(1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Push Pin)(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -( 1.06 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Strawberry)(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -(-75 75.419 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Twinkle Star )(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Arrow)(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Marker)(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Paintbrush)(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Type)(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -( 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Double Lines)(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -(0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Laurel)(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Rope )(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -(0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration]) Pc1 0 0.91 0.42 (PANTONE 349) 0 x(PANTONE 349) Pc0 0.16 1 0 (PANTONE 116) 0 x(PANTONE 116) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (Symbolism)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (Pathfinder Suite)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 1) Ln0 A*u1 D0 O1 0 0.91 0.42 (PANTONE 349) 0 x0 J 0 j 1 w 4 M []0 d0 XR175.6602 -319.729 m167.377 -319.729 162.4277 -326.6006 162.4277 -333.2441 c162.4277 -339.8882 167.377 -346.7607 175.6602 -346.7607 c183.9805 -346.7607 188.9521 -339.8882 188.9521 -333.2441 c188.9521 -326.6006 183.9805 -319.729 175.6602 -319.729 cf0 D181.125 -333.2441 m181.125 -336.9663 180.415 -343.21 175.6602 -343.21 c171.1934 -343.21 170.2559 -337.7905 170.2559 -333.2441 c170.2559 -328.6963 171.1934 -323.2754 175.6602 -323.2754 c180.415 -323.2754 181.125 -329.5215 181.125 -333.2441 cf*U215.4189 -320.4604 m204.333 -320.4604 L207.8076 -323.9341 207.873 -323.999 V207.873 -324.0884 207.873 -333.5552 207.873 -334.1587 C207.4863 -333.6714 197.001 -320.4604 Y188.0029 -320.4604 L191.4746 -323.9341 191.54 -323.999 V191.54 -324.0908 191.54 -342.3955 191.54 -342.4883 C191.4756 -342.5527 188.0029 -346.0288 Y199.3027 -346.0288 L195.8291 -342.5527 195.7646 -342.4883 V195.7646 -342.3975 195.7646 -329.5361 195.7646 -328.9395 C196.1533 -329.4111 212.1328 -348.7998 Y212.1523 -324.0918 212.1523 -323.999 V212.2168 -323.9346 215.6904 -320.4604 Y215.4189 -320.4604 Lf0 0.16 1 0 (PANTONE 116) 0 x138.4961 -279.959 m144.6348 -268.835 L143.1763 -270.2021 142.4424 -270.6318 141.0884 -271.5615 c133.6655 -276.6563 124.5313 -277.8682 115.3525 -285.4185 c109.126 -290.541 106.252 -297.9658 Y114.6094 -288.5791 127.2471 -283.8975 v132.3447 -282.0078 135.9004 -280.9707 138.4961 -279.959 Cf1 0 0.91 0.42 (PANTONE 349) 0 x135.2227 -285.8955 m128.5713 -288.0161 120.6475 -290.0347 112.5303 -295.5127 c106.207 -299.7798 102.5352 -307.0605 Y111.4497 -298.144 124.4102 -295.1006 v127.0176 -294.4893 129.207 -293.978 131.041 -293.5518 C135.2227 -285.8955 Lf*u1 D157.4287 -332.356 m150.7256 -328.752 L148.9854 -327.7412 148.3643 -326.5107 148.3643 -325.6973 C148.3408 -325.3096 148.5732 -324.8096 148.9727 -324.3848 c149.6016 -323.7148 150.5293 -323.3306 151.5186 -323.3306 c152.0381 -323.3306 152.6494 -323.4932 153.3867 -323.8281 C153.3867 -323.8379 156.8477 -327.2402 Y156.9463 -327.3379 L160.7158 -321.4434 L153.8447 -320.4619 L152.9365 -320.292 151.8799 -320.292 151.1797 -320.292 c144.9512 -320.292 142.1133 -323.9995 142.1133 -327.4443 c142.1133 -329.4619 143.3271 -332.2783 146.7334 -334.1299 C146.7344 -334.1304 153.4365 -337.7373 Y154.0215 -338.1621 154.8408 -338.7559 154.8408 -340.1147 c154.8408 -342.5532 152.6182 -343.4385 151.124 -343.4385 c150.2539 -343.4385 149.4795 -343.2168 148.8223 -342.7808 C148.8223 -342.7778 145.0088 -339.0205 Y144.8994 -338.9131 L141.7861 -344.9775 L139.6514 -342.2988 L139.6514 -342.2852 131.0513 -320.5317 Y131.0234 -320.4604 L130.9468 -320.4604 L126.7612 -320.4604 L117.9482 -342.3262 117.9478 -342.3262 V117.9453 -342.3252 116.7061 -343.9023 115.8862 -344.9453 C113.0767 -341.7256 L113.0767 -308.2412 L122.0371 -301.1396 127.8291 -299.6992 127.8149 -299.7002 c124.6299 -299.9883 117.9775 -300.5869 110.1997 -304.9199 c105.082 -307.7705 101.043 -311.667 Y101.0337 -311.6934 L101.0283 -311.6865 L99.5098 -314.5371 97.4033 -319.2803 95.3408 -324.376 C85.0801 -305.6445 L71.6289 -305.6445 L75.9292 -309.9473 L75.9292 -341.6328 L71.6289 -345.9341 L86.3408 -345.9341 L81.9697 -341.6328 L81.9697 -317.0503 L91.582 -334.2505 L90.1484 -338.292 89.0195 -341.9033 88.5498 -344.2236 C91.6421 -340.6318 L94.1523 -328.6768 104.0454 -316.9443 V104.0454 -342.0127 L99.7432 -346.0273 L115.0371 -346.0273 L115.0356 -346.0288 L125.7578 -346.0288 L122.4526 -342.7241 122.3506 -342.6226 V122.4033 -342.4927 123.6484 -339.4009 123.7021 -339.2686 C123.8496 -339.2686 131.2773 -339.2686 131.4316 -339.2686 C131.4814 -339.4092 132.5762 -342.4941 132.6211 -342.6201 C132.5239 -342.7178 129.2129 -346.0288 Y141.9531 -346.0288 L143.7402 -346.0752 148.3535 -346.1943 148.3594 -346.1948 C149.2744 -346.3467 150.2695 -346.4209 151.4033 -346.4209 c158.6807 -346.4209 161.2617 -342.1133 161.2617 -338.4238 c161.2617 -334.7334 158.5811 -332.9512 157.4287 -332.356 Cf0 D125.0889 -335.7759 m125.2021 -335.4932 127.4331 -329.9209 127.6255 -329.4404 C127.8105 -329.9233 129.9453 -335.4961 130.0527 -335.7759 C129.7554 -335.7759 125.3911 -335.7759 125.0889 -335.7759 Cf*Uu*u137.1636 -316.0586 m135.1294 -316.5757 133.6128 -316.6104 132.5093 -316.6104 c129.3027 -316.6104 125.5967 -314.9897 125.5967 -310.439 c125.5967 -305.9048 128.7856 -304.1641 133.1987 -304.1641 c133.9917 -304.1641 135.6641 -304.25 136.8364 -304.6982 c136.5776 -307.3184 L135.5776 -306.7324 134.4058 -306.543 133.647 -306.543 c131.0439 -306.543 128.9063 -307.6289 128.9063 -310.439 c128.9063 -312.8003 130.5786 -314.2314 132.9229 -314.2314 c133.354 -314.2314 133.7676 -314.1621 134.0605 -314.0244 c134.0605 -311.6455 L132.1816 -311.6455 L132.1816 -309.3701 L137.1636 -309.3701 L137.1636 -316.0586 lf*U*u143.2144 -304.3706 m151.6953 -304.3706 L151.6953 -306.6465 L146.4209 -306.6465 L146.4209 -309.1284 L151.4023 -309.1284 L151.4023 -311.4043 L146.4209 -311.4043 L146.4209 -314.1279 L151.8857 -314.1279 L151.8857 -316.4033 L143.2144 -316.4033 L143.2144 -304.3706 lf*U*u162.5557 -304.1641 m166.5205 -304.1641 168.5889 -306.5254 168.5889 -310.3872 c168.5889 -314.2139 166.4863 -316.6104 162.5557 -316.6104 c158.625 -316.6104 156.5225 -314.2139 156.5225 -310.3872 c156.5225 -306.5254 158.5908 -304.1641 162.5557 -304.1641 cf1 D162.5557 -314.2314 m164.5039 -314.2314 165.2793 -312.3696 165.2793 -310.3872 c165.2793 -308.3013 164.5039 -306.543 162.5557 -306.543 c160.6074 -306.543 159.832 -308.3013 159.832 -310.3872 c159.832 -312.3696 160.6074 -314.2314 162.5557 -314.2314 cf*U*u0 D173.6055 -304.3706 m179.3291 -304.3706 L181.4668 -304.3706 183.207 -305.3359 183.207 -307.4048 c183.207 -309.0078 182.4492 -310.0767 180.8975 -310.439 c180.8975 -310.4731 L181.9316 -310.749 182.001 -311.6626 182.6045 -313.1279 c183.7764 -316.4033 L180.4316 -316.4033 L179.7422 -314.2314 L179.0879 -312.1626 178.6738 -311.6455 177.4844 -311.6455 c176.8115 -311.6455 L176.8115 -316.4033 L173.6055 -316.4033 L173.6055 -304.3706 lf1 D176.8115 -309.3701 m177.6563 -309.3701 L178.6914 -309.3701 180.001 -309.3354 180.001 -307.9736 c180.001 -306.853 178.8809 -306.6465 177.6563 -306.6465 c176.8115 -306.6465 L176.8115 -309.3701 lf*U*u0 D199.6016 -316.0586 m197.5674 -316.5757 196.0498 -316.6104 194.9463 -316.6104 c191.7402 -316.6104 188.0342 -314.9897 188.0342 -310.439 c188.0342 -305.9048 191.2236 -304.1641 195.6367 -304.1641 c196.4297 -304.1641 198.1016 -304.25 199.2734 -304.6982 c199.0146 -307.3184 L198.0156 -306.7324 196.8428 -306.543 196.084 -306.543 c193.4814 -306.543 191.3438 -307.6289 191.3438 -310.439 c191.3438 -312.8003 193.0156 -314.2314 195.3604 -314.2314 c195.791 -314.2314 196.2051 -314.1621 196.498 -314.0244 c196.498 -311.6455 L194.6191 -311.6455 L194.6191 -309.3701 L199.6016 -309.3701 L199.6016 -316.0586 lf*U*u205.29 -304.3706 m213.7715 -304.3706 L213.7715 -306.6465 L208.4961 -306.6465 L208.4961 -309.1284 L213.4785 -309.1284 L213.4785 -311.4043 L208.4961 -311.4043 L208.4961 -314.1279 L213.9609 -314.1279 L213.9609 -316.4033 L205.29 -316.4033 L205.29 -304.3706 lf*UUu*u81.2222 -359.0967 m81.2222 -361.4277 79.709 -362.4771 77.4883 -362.4771 c75.2671 -362.4771 73.7539 -361.4277 73.7539 -359.0967 c73.7539 -353.813 L76.0239 -353.813 L76.0239 -358.7188 L76.0239 -359.8413 76.3291 -360.793 77.4883 -360.793 c78.6475 -360.793 78.9526 -359.8413 78.9526 -358.7188 c78.9526 -353.813 L81.2222 -353.813 L81.2222 -359.0967 lf*U*u90.0815 -353.813 m92.9736 -353.813 L95.853 -359.5972 L95.8774 -359.5972 L95.8408 -353.813 L97.9155 -353.813 L97.9155 -362.3306 L95.0967 -362.3306 L92.1191 -356.5098 L92.0947 -356.5098 L92.168 -362.3306 L90.0815 -362.3306 L90.0815 -353.813 lf*U*u107.6777 -353.813 m109.9478 -353.813 L109.9478 -362.3306 L107.6777 -362.3306 L107.6777 -353.813 lf*U*u119.1606 -353.813 m121.5771 -353.813 L123.4683 -360.5 L123.4927 -360.5 L125.3965 -353.813 L127.7271 -353.813 L124.8228 -362.3306 L122.0161 -362.3306 L119.1606 -353.813 lf*U*u136.1836 -353.813 m142.1875 -353.813 L142.1875 -355.4238 L138.4531 -355.4238 L138.4531 -357.1812 L141.98 -357.1812 L141.98 -358.792 L138.4531 -358.792 L138.4531 -360.7197 L142.3213 -360.7197 L142.3213 -362.3306 L136.1836 -362.3306 L136.1836 -353.813 lf*U*u151.291 -353.813 m155.3418 -353.813 L156.8555 -353.813 158.0879 -354.4966 158.0879 -355.9609 c158.0879 -357.0957 157.5508 -357.8521 156.4521 -358.1084 c156.4521 -358.1328 L157.1846 -358.3281 157.2334 -358.9746 157.6602 -360.0122 c158.4902 -362.3306 L156.123 -362.3306 L155.6348 -360.793 L155.1709 -359.3286 154.8779 -358.9624 154.0361 -358.9624 c153.5605 -358.9624 L153.5605 -362.3306 L151.291 -362.3306 L151.291 -353.813 lf1 D153.5605 -357.3521 m154.1582 -357.3521 L154.8906 -357.3521 155.8174 -357.3276 155.8174 -356.3633 c155.8174 -355.5703 155.0244 -355.4238 154.1582 -355.4238 c153.5605 -355.4238 L153.5605 -357.3521 lf*U*u0 D166.7393 -360.2314 m167.3252 -360.5488 168.1426 -360.793 169.082 -360.793 c169.8018 -360.793 170.4854 -360.6465 170.4854 -359.9634 c170.4854 -358.377 166.459 -359.3774 166.459 -356.2778 c166.459 -354.228 168.46 -353.6665 170.168 -353.6665 c170.9863 -353.6665 171.791 -353.7886 172.3652 -353.9839 c172.2188 -355.7412 L171.6328 -355.4727 170.9736 -355.3506 170.3271 -355.3506 c169.7529 -355.3506 168.8018 -355.3994 168.8018 -356.1436 c168.8018 -357.5225 172.8281 -356.5952 172.8281 -359.6704 c172.8281 -361.8789 170.9736 -362.4771 169.082 -362.4771 c168.2891 -362.4771 167.3008 -362.355 166.5439 -362.1108 C166.7393 -360.2314 lf*U*u181.3584 -353.813 m183.6279 -353.813 L183.6279 -362.3306 L181.3584 -362.3306 L181.3584 -353.813 lf*U*u194.623 -355.4971 m192.5234 -355.4971 L192.5234 -353.813 L198.9912 -353.813 L198.9912 -355.4971 L196.8926 -355.4971 L196.8926 -362.3306 L194.623 -362.3306 L194.623 -355.4971 lf*U*u208.6318 -359.1211 m205.4834 -353.813 L208.0947 -353.813 L209.7666 -357.23 L211.4141 -353.813 L214.0254 -353.813 L210.9014 -359.1211 L210.9014 -362.3306 L208.6318 -362.3306 L208.6318 -359.1211 lf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAGM_Gradient /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF